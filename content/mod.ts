
// DO NOT EDIT. This file is generated by fresh.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import { Article } from "$/types.ts";
export const content:Record<string, Article> = {"how-build-a-web-app-in-11-minutes-and-fall-in-love-with-sveltekit":{"title":"How Build a Web App in 11 Minutes and Fall in Love With Sveltekit","date":"2021-09-18T13:21:35.000Z","tags":["svelte","node","webdev","tutorial"],"draft":false,"dev_to":"https://dev.to/valeriavg/how-build-a-web-app-in-11-minutes-and-fall-in-love-with-sveltekit-1hof","summary":"It's been a long time since I got excited about a framework. I often advocate for reinventing the wheel, how come I'm writing an ode to a framework? Short answer because SvelteKit is very good, even though it's still in beta. The long answer is ahead.","url":"how-build-a-web-app-in-11-minutes-and-fall-in-love-with-sveltekit","content":"<p>It&#39;s been a long time since I got excited about a framework. I often advocate <em>for</em> reinventing the wheel, how come I&#39;m writing an ode to a framework? Short answer: because <a href=\"https://kit.svelte.dev/\" rel=\"noopener noreferrer\" target=\"_blank\">SvelteKit</a> is very good, even though it&#39;s still in <em>beta</em>. The long answer is ahead.</p>\n<p><a href=\"https://svelte.dev/\" rel=\"noopener noreferrer\" target=\"_blank\">Svelte</a> itself is like coming back to the future: you write your user interfaces with almost old-school HTML in a declarative manner with zero-to-none boilerplate. And then <code>.svelte</code> files are compiled to the plain old <code>.js</code>,<code>.css</code> and <code>.html</code>. Apps come out fast, lightweight and easy to maintain and extend.</p>\n<p>But SvelteKit takes it even further. Heard of <em>Create React App</em>? Not even close! SvelteKit is a full-stack framework capable of producing not only single-page applications and static websites, but a versatile full-blown HTTP server with any pages, API and handlers NodeJS can have.</p>\n<p>Alright, enough words let&#39;s build something already! And by <em>something</em> I mean an app where users can signup, log in and see account information.</p>\n<p>In other words, we&#39;ll build a base for a generic web service.</p>\n<h2 id=\"prerequisites--architecture\">Prerequisites &amp; Architecture</h2>\n<p>For this tutorial you&#39;ll need <a href=\"https://nodejs.org/en/\" rel=\"noopener noreferrer\" target=\"_blank\">NodeJS</a> (v14.17.6 or higher).</p>\n<p>It&#39;s also nice to have a code editor with Svelte extension (e.g. <a href=\"https://code.visualstudio.com/\" rel=\"noopener noreferrer\" target=\"_blank\">VSCode</a> with <a href=\"https://marketplace.visualstudio.com/items?itemName=svelte.svelte-vscode\" rel=\"noopener noreferrer\" target=\"_blank\">svelte-vscode</a> extension).</p>\n<p>The app will store data in a simple in-memory database (literally an object) and write to a JSON file for persistence. Though you can replace it with a database of your choice.</p>\n<p>For speed and simplicity, we&#39;ll use a minimalistic CSS framework called <a href=\"https://milligram.io/\" rel=\"noopener noreferrer\" target=\"_blank\">Milligram</a>.</p>\n<h2 id=\"creating-the-app\">Creating the App</h2>\n<p>Open the terminal, paste or type <code>npm init svelte@next my-app</code> and choose the highlighted options:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">npm</span> init svelte@next my-app\n\n<span class=\"token comment\"># ✔ Which Svelte app template? › [Skeleton project]</span>\n<span class=\"token comment\"># ✔ Use TypeScript? … No / [Yes]</span>\n<span class=\"token comment\"># ✔ Add ESLint for code linting? … No / [Yes]</span>\n<span class=\"token comment\"># ✔ Add Prettier for code formatting? … No / [Yes]</span></pre></div><p>Install dependencies from the app folder:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token builtin class-name\">cd</span> my-app <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">npm</span> i</pre></div><p>You can now start the app in the development mode with:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">npm</span> run dev</pre></div><p>Open <em><a href=\"http://localhost:3000/\" rel=\"noopener noreferrer\" target=\"_blank\">http://localhost:3000/</a></em> in your browser to see the ascetic home page.</p>\n<p>Let&#39;s start with the layout: a file that will include global css styles and some constant parts of the page. Create file <code>src/routes/__layout.svelte</code>:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\n    <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token comment\">&lt;!-- CSS Reset --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\n    <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.css<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token comment\">&lt;!-- Milligram CSS --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\n    <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/milligram/1.4.1/milligram.css<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{new Date().getFullYear()} <span class=\"token entity named-entity\" title=\"&copy;\">&amp;copy;</span> MY APP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">:global(body, html, #svelte)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100vw<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">:global(#svelte)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 3rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">footer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 0.8em<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0.5<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></div><p>The page should be looking much better now because we replaced the default <code>&lt;slot&gt;&lt;/slot&gt;</code> layout with a bit more sophisticated one. SvelteKit will look for <code>__layout.svelte</code> file in the nearest or parent directory, so it&#39;s possible to use a different one for each nested folder.</p>\n<p>As you can see Svelte is very close to HTML, though you probably have noticed the differences:</p>\n<ul>\n<li><code>&lt;svelte:head/&gt;</code> tag that contains contents that should be inserted into the <code>&lt;head/&gt;</code> tag of the final page</li>\n<li><code>:global(selector)</code> in style, pointing out that no scoped class should be created and instead, the selectors should be used <em>as is</em></li>\n<li>JavaScript code right in the middle of HTML contents</li>\n</ul>\n<h2 id=\"creating-forms--pages\">Creating Forms &amp; Pages</h2>\n<p>To create a new page create a new file <code>src/routes/signup.svelte</code>:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Create an account<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Create an account<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/signup<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Email<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user@email.net<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Your password<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">required</span>\n    <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Password, again<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Repeat the password, please<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>repeat-password<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">required</span>\n    <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Signup<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Already have an account? <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/login<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">form</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 420px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></div><p>And <code>src/routes/login.svelte</code>:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/login<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Email<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user@email.net<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Your password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Login<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Don't have an account? <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/signup<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Signup<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">form</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 420px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></div><p>Navigate to <code>http://localhost:3000/login</code> or <code>http://localhost:3000/signup</code> to enjoy utterly useless forms that send data to themselves.</p>\n<h2 id=\"creating-api-route-handlers\">Creating API Route handlers</h2>\n<blockquote>\n<p>Update: adjusted Svelte Kit API to that of v1.0.0-next.259</p>\n</blockquote>\n<p>To create a handler for <code>POST /signup</code> all we need to do is create a <code>signup.ts</code> (or <code>.js</code>, if you prefer) file in routes, exporting a <code>post</code> function. Simple, right?</p>\n<p>But first, we need a couple of handy dependencies: <a href=\"https://www.npmjs.com/package/uuid\" rel=\"noopener noreferrer\" target=\"_blank\">uuid</a> to generate unique user ID&#39;s and tokens and <a href=\"https://www.npmjs.com/package/bcrypt\" rel=\"noopener noreferrer\" target=\"_blank\">bcrypt</a> to hash passwords:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">npm</span> i uuid bcrypt --save <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">npm</span> i @types/uuid @types/bcrypt --save-dev</pre></div><p>You might need to restart the dev server after installing new dependencies.</p>\n<p>Now let&#39;s create <code>src/routes/signup.ts</code> with:</p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token keyword module\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">RequestHandler</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"@sveltejs/kit\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> v4 <span class=\"token keyword module\">as</span> uuidv4 <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">bcrypt</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"bcrypt\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> post<span class=\"token operator\">:</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">RequestHandler</span></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> contentType <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">request</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> req <span class=\"token operator\">=</span>\n    contentType <span class=\"token operator\">===</span> <span class=\"token string\">\"application/json\"</span>\n      <span class=\"token operator\">?</span> <span class=\"token keyword control-flow\">await</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">request</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">:</span> contentType<span class=\"token operator\">?.</span><span class=\"token method function property-access\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"form\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">?</span> <span class=\"token keyword control-flow\">await</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">request</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">formData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> error<span class=\"token operator\">:</span> <span class=\"token string\">\"Incorrect input\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Handle FormData &amp; JSON</span>\n  <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    email<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"get\"</span> <span class=\"token keyword\">in</span> req <span class=\"token operator\">?</span> req<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?.</span><span class=\"token method function property-access\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    password<span class=\"token operator\">:</span> <span class=\"token string\">\"get\"</span> <span class=\"token keyword\">in</span> req <span class=\"token operator\">?</span> req<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"repeat-password\"</span><span class=\"token operator\">:</span>\n      <span class=\"token string\">\"get\"</span> <span class=\"token keyword\">in</span> req <span class=\"token operator\">?</span> req<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"repeat-password\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> req<span class=\"token punctuation\">[</span><span class=\"token string\">\"repeat-password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> error<span class=\"token operator\">:</span> <span class=\"token string\">\"Email &amp; password are required\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span> <span class=\"token operator\">!==</span> input<span class=\"token punctuation\">[</span><span class=\"token string\">\"repeat-password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> error<span class=\"token operator\">:</span> <span class=\"token string\">\"Passwords do not match\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> <span class=\"token function\">uuidv4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token operator\">:</span> input<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">,</span>\n    pwhash<span class=\"token operator\">:</span> <span class=\"token keyword control-flow\">await</span> bcrypt<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">hash</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    status<span class=\"token operator\">:</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      user<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></pre></div><p>If you submit the signup form now you&#39;ll see a page with JSON response like this:</p>\n<div class=\"highlight highlight-source-json notranslate\"><pre><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"user\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"60d784c7-d369-4df7-b506-a274c962880e\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"clark.kent@daily.planet\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pwhash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$2b$10$QiLRAFF5qqGxWuQjT3dIou/gZo2A0URImJ1YMSjOx2GYs0BxHt/TC\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div><p>Writing handlers in SvelteKit is as simple as writing a function that returns an object with <code>status</code>, <code>body</code> and optional <code>headers</code> properties.</p>\n<p>But we are not storing user information anywhere yet. To do so we need to add a global store and give our handler access to it.</p>\n<p>First things first, let&#39;s create a poor-mans in-memory database in <code>src/lib/db.ts</code>:</p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\">fs</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"fs/promises\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">User</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  pwhash<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">UserToken</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">DB</span></span> <span class=\"token punctuation\">{</span>\n  users<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">User</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  tokens<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">UserToken</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">__stop</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DB_FILE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"db.json\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">initDB</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> data<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Record</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token known-class-name class-name\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">]</span><span class=\"token operator\">>></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DB_FILE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    data <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">parse</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Failed to read </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">DB_FILE</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> db<span class=\"token operator\">:</span> <span class=\"token constant\">DB</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    users<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token known-class-name class-name\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">User</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token property-access\">users</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    tokens<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token known-class-name class-name\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">UserToken</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token property-access\">tokens</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">__stop</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> interval <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">writeFile</span><span class=\"token punctuation\">(</span>\n        <span class=\"token constant\">DB_FILE</span><span class=\"token punctuation\">,</span>\n        <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          users<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span>db<span class=\"token punctuation\">.</span><span class=\"token property-access\">users</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          tokens<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span>db<span class=\"token punctuation\">.</span><span class=\"token property-access\">tokens</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Failed to write </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">DB_FILE</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  db<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">__stop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> db<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></pre></div><p>To give every route access to this &quot;database&quot; we can use <code>hooks</code>, which allow us to <em>hook</em> middleware(s) before or after any route handler. Expectedly a file <code>src/hooks.ts</code> will do the trick:</p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> initDB <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"$lib/db\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Handle</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"@sveltejs/kit\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a promise, therefore start execution</span>\n<span class=\"token keyword\">const</span> setup <span class=\"token operator\">=</span> <span class=\"token function\">initDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Exit the app if setup has failed</span>\n  process<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> handle<span class=\"token operator\">:</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Handle</span></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> event<span class=\"token punctuation\">,</span> resolve <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Ensure that the promise is resolved before the first request</span>\n  <span class=\"token comment\">// It'll stay resolved for the time being</span>\n  <span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> setup<span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token property-access\">locals</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"db\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> db<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> response<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></pre></div><p>I intentionally made <code>initDB</code> function asynchronous to show how to do asynchronous startup via Promises. If it seems a bit like a <em>hack</em>, well, that&#39;s because it is, though I believe there will be a more straightforward way of doing it in the future.</p>\n<p>Alright, now let&#39;s quickly add saving user to the database in the <code>src/routes/signup.ts</code>:</p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token keyword module\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">RequestHandler</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"@sveltejs/kit\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> v4 <span class=\"token keyword module\">as</span> uuidv4 <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">bcrypt</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"bcrypt\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">DB</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"$lib/db\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> post<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">RequestHandler</span><span class=\"token operator\">&lt;</span>\n  <span class=\"token punctuation\">{</span> db<span class=\"token operator\">:</span> <span class=\"token constant\">DB</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token maybe-class-name\">Partial</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> password<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"repeat-password\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">||</span> <span class=\"token known-class-name class-name\">Array</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isArray</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> error<span class=\"token operator\">:</span> <span class=\"token string\">\"Incorrect input\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Handle FormData &amp; JSON</span>\n  <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    email<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"get\"</span> <span class=\"token keyword\">in</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span> <span class=\"token operator\">?</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">?.</span><span class=\"token method function property-access\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    password<span class=\"token operator\">:</span> <span class=\"token string\">\"get\"</span> <span class=\"token keyword\">in</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span> <span class=\"token operator\">?</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"repeat-password\"</span><span class=\"token operator\">:</span>\n      <span class=\"token string\">\"get\"</span> <span class=\"token keyword\">in</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span>\n        <span class=\"token operator\">?</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"repeat-password\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"repeat-password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span> <span class=\"token operator\">!==</span> input<span class=\"token punctuation\">[</span><span class=\"token string\">\"repeat-password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> error<span class=\"token operator\">:</span> <span class=\"token string\">\"Passwords do not match\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">locals</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">db</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> <span class=\"token function\">uuidv4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token operator\">:</span> input<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">,</span>\n    pwhash<span class=\"token operator\">:</span> <span class=\"token keyword control-flow\">await</span> bcrypt<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">hash</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Store in DB</span>\n  db<span class=\"token punctuation\">.</span><span class=\"token property-access\">users</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    status<span class=\"token operator\">:</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      user<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></pre></div><p>If you submit the form again and check <code>db.json</code> in a second - you&#39;ll see your data there.</p>\n<p>Now let&#39;s write a login function in <code>src/routes/login.ts</code></p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token keyword module\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">RequestHandler</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"@sveltejs/kit\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> v4 <span class=\"token keyword module\">as</span> uuidv4 <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"uuid\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">bcrypt</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"bcrypt\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">DB</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"$lib/db\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> post<span class=\"token operator\">:</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">RequestHandler</span></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> contentType <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">request</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> req <span class=\"token operator\">=</span>\n    contentType <span class=\"token operator\">===</span> <span class=\"token string\">\"application/json\"</span>\n      <span class=\"token operator\">?</span> <span class=\"token keyword control-flow\">await</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">request</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">:</span> contentType<span class=\"token operator\">?.</span><span class=\"token method function property-access\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"form\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">?</span> <span class=\"token keyword control-flow\">await</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">request</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">formData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> error<span class=\"token operator\">:</span> <span class=\"token string\">\"Incorrect input\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Handle FormData &amp; JSON</span>\n  <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    email<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"get\"</span> <span class=\"token keyword\">in</span> req <span class=\"token operator\">?</span> req<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?.</span><span class=\"token method function property-access\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    password<span class=\"token operator\">:</span> <span class=\"token string\">\"get\"</span> <span class=\"token keyword\">in</span> req <span class=\"token operator\">?</span> req<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">locals</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"db\"</span><span class=\"token punctuation\">]</span> <span class=\"token keyword module\">as</span> <span class=\"token constant\">DB</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token property-access\">users</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> error<span class=\"token operator\">:</span> <span class=\"token string\">\"Incorrect email or password\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> isPasswordValid <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> bcrypt<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">compare</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span><span class=\"token property-access\">pwhash</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isPasswordValid<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> error<span class=\"token operator\">:</span> <span class=\"token string\">\"Incorrect email or password\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token function\">uuidv4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> email<span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  db<span class=\"token punctuation\">.</span><span class=\"token property-access\">tokens</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    status<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      user<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"set-cookie\"</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">token=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>token<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></pre></div><p>In this function, we check if a user with this email exists, verify provided password against the saved hash and either return an error or create a new token and set it as a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies\" rel=\"noopener noreferrer\" target=\"_blank\">session cookie</a>.</p>\n<blockquote>\n<p>In a production app you should set an expiration date to both cookies and stored tokens.</p>\n</blockquote>\n<p>Go ahead and try logging in with correct and then wrong credentials. It works and it works without any client JavaScript, which is great for compatibility, but is a bit <em>meh</em>.</p>\n<h2 id=\"reusable-svelte-components\">Reusable Svelte components</h2>\n<p>Both of our <code>login</code> and <code>signup</code> pages are pretty much the same and the functionality is quite similar. Therefore, let&#39;s write a component to use in both of them. Create <code>src/routes/_form.svelte</code>:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> type <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">User</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"$lib/db\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> afterUpdate <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword module\">export</span> <span class=\"token keyword\">let</span> action <span class=\"token operator\">=</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword module\">export</span> <span class=\"token keyword\">let</span> method <span class=\"token operator\">=</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">;</span>\n\n  type <span class=\"token maybe-class-name\">Result</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> error<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> user<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">User</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword module\">export</span> <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">onUpdate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">result</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Result</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">isSubmitting</span><span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function-variable function\">void</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> <span class=\"token literal-property property\">result</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Result</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> isSubmitting <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSubmit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>isSubmitting<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span><span class=\"token punctuation\">;</span>\n    isSubmitting <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">form</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">HTMLFormElement</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">form</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> formData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Record</span><span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    formData<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    result <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">.</span><span class=\"token property-access\">action</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> form<span class=\"token punctuation\">.</span><span class=\"token property-access\">method</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"content-type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> r<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> err<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    isSubmitting <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">$</span><span class=\"token operator\">:</span> error <span class=\"token operator\">=</span> result<span class=\"token operator\">?.</span>error<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">afterUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> result<span class=\"token punctuation\">,</span> isSubmitting <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">{method}</span> <span class=\"token attr-name\">{action}</span> <span class=\"token attr-name\"><span class=\"token namespace\">on:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{onSubmit}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token punctuation\">/></span></span>\n  {#if error}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{error}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  {/if}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">form</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 420px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">.error</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></div><p>Simply exporting values from a Svelte component makes them <em>properties</em>, similar to a <code>JSX / React</code> Component. And a <code>&lt;slot/&gt;</code> tag determines the spot for the inner HTML or other Svelte components.</p>\n<p>And now let&#39;s import and use this component in <code>src/routes/login.svelte</code>:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> goto <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"$app/navigation\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"$app/stores\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Form</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./_form.svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> <span class=\"token literal-property property\">isSubmitting</span><span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span>\n  session<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onUpdate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">form</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    isSubmitting <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span><span class=\"token property-access\">isSubmitting</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">.</span><span class=\"token property-access\">result</span><span class=\"token operator\">?.</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      session<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> form<span class=\"token punctuation\">.</span><span class=\"token property-access\">result</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">user</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You are logged in!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">goto</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/login<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">{onUpdate}</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Email<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user@email.net<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Your password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n      <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-primary<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Login<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">disabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{isSubmitting}<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Don't have an account? <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/signup<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Signup<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></div><p>Here we are also setting <em>session</em> state so that other pages will have access to user information.</p>\n<p>Let&#39;s add the <code>&lt;Form/&gt;</code> to <code>src/routes/signup.svelte</code> as well:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> goto <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"$app/navigation\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Form</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./_form.svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> <span class=\"token literal-property property\">isSubmitting</span><span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onUpdate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">form</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    isSubmitting <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span><span class=\"token property-access\">isSubmitting</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">.</span><span class=\"token property-access\">result</span><span class=\"token operator\">?.</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You are signed up!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">goto</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Create an account<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Create an account<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/signup<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">{onUpdate}</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Email<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user@email.net<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Your password<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">required</span>\n    <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Password, again<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Repeat the password, please<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>repeat-password<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">required</span>\n    <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n      <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-primary<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Signup<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">disabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{isSubmitting}<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Already have an account? <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/login<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></div><p>Now you should be able to create an account and log in without annoying raw JSON (but with annoying alerts instead :-) )</p>\n<h2 id=\"user-only-content\">User-only content</h2>\n<p>The whole point of user authentication is to show something that only a certain user should see. That&#39;s why we are going to make some changes to the <code>src/routes/index.svelte</code> page:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"$app/stores\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword module\">import</span> type <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">User</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"$lib/db\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">User</span> <span class=\"token operator\">|</span> <span class=\"token keyword nil\">undefined</span><span class=\"token punctuation\">;</span>\n  session<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">current</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    user <span class=\"token operator\">=</span> current<span class=\"token punctuation\">.</span><span class=\"token property-access\">user</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">$</span><span class=\"token operator\">:</span> username <span class=\"token operator\">=</span> user <span class=\"token operator\">?</span> user<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Guest\"</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Welcome, {username}!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">svelte:</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Welcome, {username}!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n{#if user}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>You are logged in!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n{:else}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Would you like to <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/login<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n{/if}</pre></div><p>Now, when you log in, you should see your email on the home page, but if you reload the page you will only see the Guest state, as we don&#39;t have access to the server <em>session</em> yet. To pass server session state to the client we need to modify <code>src/hooks.ts</code>:</p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> initDB <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"$lib/db\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">GetSession</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Handle</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"@sveltejs/kit\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> parse <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"querystring\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a promise, therefore start execution</span>\n<span class=\"token keyword\">const</span> setup <span class=\"token operator\">=</span> <span class=\"token function\">initDB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Exit the app if setup has failed</span>\n  process<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> handle<span class=\"token operator\">:</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Handle</span></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> event<span class=\"token punctuation\">,</span> resolve <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Ensure that the promise is resolved before the first request</span>\n  <span class=\"token comment\">// It'll stay resolved for the time being</span>\n  <span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> setup<span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token property-access\">locals</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"db\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> db<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cookies <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">request</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cookie\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">?.</span><span class=\"token method function property-access\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\";\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduceRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">assign</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>cookies<span class=\"token operator\">?.</span>token <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> cookies<span class=\"token punctuation\">.</span><span class=\"token property-access\">token</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> existingToken <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token property-access\">tokens</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span>cookies<span class=\"token punctuation\">.</span><span class=\"token property-access\">token</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>existingToken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      event<span class=\"token punctuation\">.</span><span class=\"token property-access\">locals</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token property-access\">users</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span>existingToken<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> response<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> getSession<span class=\"token operator\">:</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">GetSession</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">locals</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n        user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// only include properties needed client-side —</span>\n          <span class=\"token comment\">// exclude anything else attached to the user</span>\n          <span class=\"token comment\">// like access tokens etc</span>\n          email<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">locals</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></pre></div><p>We added yet another hook called <code>getSession</code> that makes server values accessible on the client-side and during pre-render.</p>\n<p>Another improvement has been made to the <code>handle</code> hook, which now determines which user is currently logged in based on the <code>token</code> cookie.</p>\n<p>Load the page one more time to see something like:</p>\n<div class=\"highlight highlight-source-md notranslate\"><pre><span class=\"token title important\"><span class=\"token punctuation\">#</span> Welcome, clark.kent@daily.planet!</span>\n\nYou are logged in!</pre></div><h2 id=\"whats-next\">What&#39;s next?</h2>\n<p>While SvelteKit is still in beta it might not be suitable for mission-critical applications yet, but it seems to be getting there fast.</p>\n<p>Nonetheless, if you would like to deploy your app for the world to see, you&#39;ll need an <a href=\"https://kit.svelte.dev/docs#adapters\" rel=\"noopener noreferrer\" target=\"_blank\">adapter</a>. For this app and overall a generic Node app you can use <code>@sveltejs/adapter-node@next</code>, but there&#39;s a lot of other options, including static site generation or oriented to a particular type of deployment. And you can always write your own, it&#39;s really simple.</p>\n<p>I love how close to the actual Web ( as in HTML, CSS, JS) Svelte is and SvelteKit feels the same way with its predictable HTTP abstractions.</p>\n<p>What do you think, reader? Excited to give it a try yet?</p>\n"},"not-broken-just-different":{"title":"Not broken, just different","date":"2023-02-10T06:35:13.000Z","tags":["mentalhealth","beginners","motivation"],"draft":false,"twitter":"1625356771094061059","dev_to":"https://dev.to/valeriavg/im-autistic-and-theres-something-i-want-to-do-with-it-3n1k","summary":"In the beginning of January'23 I was laying on my bed and watching \"Love on the spectrum\". You see, the person I love dearly has been just diagnosed with ADHD and autism. The second part actually came as a surprise: how can they be autistic?!\n","url":"not-broken-just-different","content":"<p>In the beginning of January&#39;23 I was laying on my bed and watching &quot;Love on the spectrum&quot;. You see, the person I love dearly has been just diagnosed with ADHD and autism. The second part actually came as a surprise: how can they be autistic?! I could never relate to anyone more then I do to this amazing person and neither of us looked like a &quot;Good Doctor&quot; or Sheldon. The documentary was my attempt to broaden my views and learn more about autism: I was particularly interested in how autists feel and how they show their love.</p>\n<p>First couple of &quot;contestants&quot; looked exactly like media taught me autistic people should look like: they loved trains, cars and spoke without any consideration for other&#39;s feelings. But then there was a girl that looked &quot;normal&quot;. While she talked about herself I was getting more and more annoyed: there&#39;s nothing special about her worldview, it&#39;s not very different from my own. What a phony documentary... And then it hit me.</p>\n<h2 id=\"ok-google-how-autism-presents-in-females\">Ok, Google: how autism presents in females</h2>\n<p>I searched my memory database and couldn&#39;t find any female autistic model. I don&#39;t remember how much time I spent jumping from one google search to another, from article to article, from test to test: I tend to lose track of time when I&#39;m onto something.</p>\n<p>Finally everything was making sense! My intolerance of egg shells or greasy hair, why I played games with subtitles and without sound, why I drew a boy with very visible genitalia when I was in first grade, why I cry of sadness and happiness so very often, why I can&#39;t accept anything without fully understanding it, why I can&#39;t let go if I latch into something and, most importantly, why I have been so goddamned miserable my whole life no matter how hard I tried or how much progress I made.</p>\n<h2 id=\"not-broken-just-different\">Not broken, just different!</h2>\n<p>On January 27th I entered my doctor&#39;s office and I drew a diagram of my personality when he asked me what brought me there. Here it is, if you wonder:</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ds7juvm2cgazd0j6qx1w.jpeg\" alt=\"Circles: DNA in the center, wrapped in emotions/hormones, wrapped in consciousness with behaviours coming out as arrows\"></p>\n<p>I&#39;ve explained that the closer to the core - the less control I have over that area. I can adjust my behaviours, but they are heavily influenced by my feelings, which fire up like alarms every time there&#39;s an opportunity to act in favour of my essence (labeled as DNA) and I can only acknowledge those alarms. </p>\n<p>And, finally, I placed a tiny dot on the &quot;consciousness&quot; circle: that&#39;s my identity - a mind-cached version of my &quot;core&quot;. &quot;That dot is very small now, there&#39;s only one thing there at the moment.&quot;, - I said - &quot;I suspect that I&#39;m autistic&quot;.</p>\n<p>It was very important for me to be validated there and then: had he said I&#39;m delusional - my whole identity and the last hope of understanding myself would vanish...</p>\n<p>Gladly, he didn&#39;t. He asked me if I intentionally drew consciousness as a shield and why emotions were wrapped in it. He talked about autism and how it&#39;s a huge misconception that autists don&#39;t feel anything, while the exact opposite is true - they feel everything ten fold, including deep empathy for inanimate objects.</p>\n<p>He was careful, I knew he would be: to be diagnosed with Autism Spectrum Disorder one needs to wait in a long line for a psychiatric assessment and he couldn&#39;t possibly bypass that. Yet, by the end of our session he moved from &quot;I don&#39;t see anything wrong with your train of thought&quot; to more literal &quot;I have performed multiple autism assessments myself and I have no doubts you are autistic.&quot;</p>\n<h2 id=\"too-smart-to-be-diagnosed\">Too smart to be diagnosed?!</h2>\n<p>That day I got a dubious &quot;Other work-related condition&quot; diagnosis and a note in my journal, stating that while he agrees with my self-diagnosis, he believes that by using my cognitive skills, I&#39;ve built coping mechanisms that allow me to remain not only functional, but live happily ever after and that further investigation and diagnosis are irrelevant.</p>\n<p>&quot;The patient agrees&quot; - the note concluded rightfully so. There is no benefit I can get from an official diagnosis, there&#39;s no medication for my &quot;condition&quot; and by all means I&#39;m coping well on my own. The only support I need I can get regardless: a bit of a guidance to expand my identity and understand the difference between me and my neurotypical peers.</p>\n<p>I am relieved and happy and my identity now has a strong foundation, but there is something he said that doesn&#39;t sit right with me: &quot;There&#39;s a lot of unlucky people who aren&#39;t as smart as you and they are really disabled by their autism&quot;</p>\n<h2 id=\"dont-want-to-be-the-lucky-one\">Don&#39;t want to be the lucky one</h2>\n<p>First of all, it has been rough 36 years and I&#39;m really sour that I&#39;ve spent them all not knowing who I am, masking and mimicking behaviour of others to fly under the radar. Sure, I was lucky (impulsive, courageous, naive) enough to accidentally build a career out of my special interests and after lots of trial and error find work environment that accommodated my needs of autonomy, direct feedback, sane deadlines and flexible schedule, but what about the others?</p>\n<p>As soon as I suspected my autism I&#39;ve connected with people in the same boat: some were much smarter than me, some were more talented than me, some were more different than alike and very few of them were happy with their life.</p>\n<p>But I am happy, despite of everything I&#39;ve been though. The very same traits that were supposed to disable me done the exact opposite. In the past six months I have been through work burnout, had my marriage shattered to pieces and needed to fully take on childcare. And yet I have never felt better.</p>\n<p>That doesn&#39;t make any sense, does it? If I&#39;m so smart and that somehow protected me, why wasn&#39;t it a universal experience for autistic folks with high IQ? Why did they struggle to find a job, have a family, find a sense of belonging in this world and instead were deeply depressed and lost?</p>\n<p>I don&#39;t have all the answers, but I think I have this one: because we&#39;re all different. Autistic or not, neurodivergent and neurotypical - we are all individuals, unique and essential for each other, every single one of us. I was lucky to find people that allowed me to be myself and then I had the confidence to convince the rest. I was lucky to have a specific blend of high mental capacity, willpower and emotional resilience (and feelings) of a hormonal teenager that I never outgrew.</p>\n<p>I don&#39;t want to be the lucky one, the anomaly within a minority, I want to be one of a million of lucky ones. I want my neurodivergent children to grow in a more accepting and compassionate world.</p>\n<p>That - acceptance and compassion - is where we should begin.\nBut it&#39;s really hard to accept self, not to mention other people, when you are hungry, cold and not sure if you&#39;ll survive, isn&#39;t it?</p>\n<p>It&#39;s dark and scary and very uncomfortable to talk about, but here is me: a privileged white woman in a nordic country with a fancy job title, good salary, typing this from an expensive laptop, who got cured of a life long struggle with a Netflix show, some google searches and one talk with a therapist; and there are hundreds and thousands of people on a different distance from the edge of disaster, severely exhausted, with little to no means of support, wanting to be part of this very society and contribute their talents to the benefit of all.</p>\n<p>And so the only thing I can do as an autistic person who can&#39;t possibly guess what others want of me is ask: What can I do to help?</p>\n<h2 id=\"how-can-i-help\">How can I help</h2>\n<p>I did ask this question in person and on Reddit and my reach was tiny, but judging by the answers I got - neurodivergent people need tools to be able to support themselves first and foremost. The next in the list was advocacy. I don&#39;t like word &quot;advocacy&quot; as it not very precise, for me it means respect, compassion and unconditional love.</p>\n<p>So the next time I&#39;ll see a person that would strike me as odd, I&#39;ll keep an open mind and assume that this person knows something that I don&#39;t and vice versa. I am working hard on training my patience, I&#39;m learning to ask questions instead of spiralling into a whirlwind of &quot;what if&quot;s and I&#39;m opening up about my experience in the hopes that it&#39;ll help others find some solace and build their own identities.</p>\n<p>That I can do on my own and I&#39;m doing in hopes of fighting the stigma I surely perpetuated myself. But here&#39;s something I need help with.</p>\n<p>All people need access and opportunities to develop their skills, build careers out of their special interests and have a chance to be as privileged as I am.</p>\n<p>Here&#39;s a quote from one of my respondents:</p>\n<blockquote>\n<p>Musicians, specially neurodivergent musicians, need better tools to accommodate their process of working and thinking, freeing their attention and creativity from having to deal with technical frustrations and being able to focus more solely on the music itself.</p>\n</blockquote>\n<p>It&#39;s amazing how if you apply the same exact phrase to designers, content creators and software developers it still makes sense, while only the latter have access to a subset of tools and methodologies that make it possible.</p>\n<p>I have spent over a decade of my life building software and I love it still, but I&#39;m not enough.</p>\n<p>The beauty of neurodiversity is the endless possibility of combinations: would I try and solve everything by myself I&#39;d defy the very core of my ideology. </p>\n<p>Therefore,</p>\n<h2 id=\"heres-what-i-have-right-now\">Here&#39;s what I have right now</h2>\n<p>I have a logo and a name for this project:</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6ro8m8bg3hrfh5cetqg.png\" alt=\"&quot;en-di&quot; and infinity heart\"></p>\n<p>The name comes from the abbreviation &quot;ND&quot;, but I like how it becomes almost a name, but not quite. It stands for neurodiversity and neurodivergent, as well as &quot;_n_ot broken, just _d_ifferent&quot; and &quot;not disabled&quot;. Pick the one that you like most or come up with your own, it&#39;s a flexible name!</p>\n<p>The logo is composed out of black and white infinity symbol and a heart. Hearts represents love and compassion; infinity symbol is almost like the ones for neurodiversity and autism, except it&#39;s not colored. It&#39;s not up to me to decide what&#39;s on the spectrum or not and I wanted the logo to be flexible too - it&#39;s an empty canvas, ready to be painted on.</p>\n<p>I&#39;ve also created <a href=\"https://github.com/orgs/en-di\" rel=\"noopener noreferrer\" target=\"_blank\">a GitHub organisation</a> as a platform for discussions and specifications of what this project should blossom into.</p>\n<p>At the very least it&#39;ll give more people a chance to build a portfolio and get some mentoring and hands on experience to kickstart career in IT, I&#39;ll help with it to the best of my abilities. I do believe we could do much more together!</p>\n<p>I would love to hear your ideas, opinions, suggestions, needs and, if you feel up for a challenge, to join me in building a digital bridge over a gap in our differences.</p>\n"},"master-git-in-7-minutes":{"title":"Master Git in 7 Minutes","date":"2021-07-11T12:27:30.000Z","tags":["beginners","git","tutorial","webdev"],"draft":false,"dev_to":"https://dev.to/valeriavg/master-git-in-7-minutes-gai","summary":"Essentially, Git keeps tabs on text changes, but the definition is a version control system. Chances are you've already used git one way or another: it is a de-facto standard for code versioning due to it's distributed nature, as opposed to centralised Apache Subversion (SVN).\n","url":"master-git-in-7-minutes","content":"<p>Essentially, Git keeps tabs on text changes, but the definition is a version control system. Chances are you&#39;ve already used git one way or another: it is a de-facto standard for code versioning due to it&#39;s distributed nature, as opposed to centralised Apache Subversion (SVN).</p>\n<h2 id=\"installing-git\">Installing Git</h2>\n<p>To check if you have Git installed run in your terminal:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> version\n<span class=\"token comment\"># git version 2.30.1 (Apple Git-130)</span></pre></div><p>If you don&#39;t have it, follow instructions on <a href=\"https://git-scm.com/downloads\" rel=\"noopener noreferrer\" target=\"_blank\">https://git-scm.com/downloads</a>. Mac users can install it with brew: <code>brew install git</code></p>\n<h2 id=\"configuring-git\">Configuring Git</h2>\n<p>There are just a few things we want to configure:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"John Doe\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token comment\"># your name</span>\n<span class=\"token function\">git</span> config --global user.email johndoe@example.com <span class=\"token operator\">&amp;&amp;</span> <span class=\"token comment\"># your email</span>\n<span class=\"token function\">git</span> config --global init.defaultbranch main <span class=\"token comment\"># default branch name, to be compatible with GitHub</span></pre></div><p>You can see current global configuration with:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> config --global --list\n<span class=\"token comment\"># Type \":q\" to close</span></pre></div><p>Git stores configuration in plain text and, if you prefer, you can edit global configuration directly in <code>~/.gitconfig</code> or <code>~/.config/git/config</code>.</p>\n<p>As the command suggests, removing <code>--global</code> would make these commands scoped to the current folder. But to test that out we need a repository.</p>\n<h2 id=\"creating-new-repository\">Creating new repository</h2>\n<p>A repository is just a folder with all the stuff you want to track. To create one run:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">mkdir</span> gitexample <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token builtin class-name\">cd</span> gitexample <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> init\n<span class=\"token comment\"># gitexample git:(main)</span></pre></div><p>This command creates a folder <code>.git</code> inside <code>gitexample</code> folder. That hidden <code>.git</code> folder is what makes a repository: all local configuration and changes are stored there.</p>\n<h2 id=\"making-changes\">Making changes</h2>\n<p>Let&#39;s create something in the repository:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, Git\"</span> <span class=\"token operator\">>></span> hello.txt</pre></div><p>If we ran <code>git status</code>, we&#39;ll see the newly created untracked file:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> status\n<span class=\"token comment\"># On branch main</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># No commits yet</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Untracked files:</span>\n<span class=\"token comment\">#  (use \"git add &lt;file>...\" to include in what will be committed)</span>\n<span class=\"token comment\">#    hello.txt</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># nothing added to commit but untracked files present (use \"git add\" to track)</span></pre></div><p>As the output suggests, let add the file. It can be done directly with:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span> <span class=\"token comment\"># Or `git add hello.txt`, if we don't want all files</span></pre></div><p>If you check on the repository status now, you&#39;ll see that the file is added (aka <em>staged</em>), but not yet committed:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> status\n<span class=\"token comment\"># On branch main</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># No commits yet</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Changes to be committed:</span>\n<span class=\"token comment\">#  (use \"git rm --cached &lt;file>...\" to unstage)</span>\n<span class=\"token comment\">#    new file:   hello.txt</span></pre></div><p>To record the changes, let&#39;s commit them:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Add hello.txt\"</span>\n<span class=\"token comment\"># [main (root-commit) a07ee27] Adds hello.txt</span>\n<span class=\"token comment\"># 1 file changed, 2 insertions(+)</span>\n<span class=\"token comment\"># create mode 100644 hello.txt</span></pre></div><p>Pro tip: <code>git commit -m &lt;MESSAGE&gt;</code> is a short hand command, you can use <code>git commit</code> to open editor (mostly vim) and provide a detailed commit description instead.</p>\n<p>Let&#39;s check the changes with:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> log\n<span class=\"token comment\"># type :q to close</span></pre></div><p>It will show something like:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre>commit a07ee270d6bd0419a50d1936ad89b9de0332f375 <span class=\"token punctuation\">(</span>HEAD -<span class=\"token operator\">></span> main<span class=\"token punctuation\">)</span>\nAuthor: Your Name <span class=\"token operator\">&lt;</span>your@email.address<span class=\"token operator\">></span>\nDate:   Sun Jul <span class=\"token number\">11</span> <span class=\"token number\">11</span>:47:16 <span class=\"token number\">2021</span> +0200\n\n    Adds hello.txt\n<span class=\"token punctuation\">(</span>END<span class=\"token punctuation\">)</span></pre></div><h2 id=\"creating-branches\">Creating branches</h2>\n<p>Having a separate version of the initial code can be useful in a lot of situation: e.g. when testing out a feature you&#39;re unsure about or to avoid code conflicts when working together. That&#39;s exactly what a git branch is: it grows from a particular point in history.</p>\n<p>To create a branch run <code>git branch NAME</code> and to switch branch run <code>git checkout NAME</code>. Or simply:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> checkout -b dev <span class=\"token comment\"># switches to a new branch called \"dev\"</span>\n<span class=\"token comment\"># Switched to a new branch 'dev'</span>\n<span class=\"token comment\"># gitexample git:(dev)</span></pre></div><p>Let&#39;s change something in the <code>hello.txt</code> file and commit the changes:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>Hello, Git Branch\"</span> <span class=\"token operator\">>></span> hello.txt <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> commit -am <span class=\"token string\">\"Change hello.txt\"</span></pre></div><p>Now let&#39;s switch back to main version:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> checkout main <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">cat</span> hello.txt\n<span class=\"token comment\"># Switched to branch 'main'</span>\n<span class=\"token comment\"># Hello, Git</span></pre></div><p>As you can see, the file contents are still the same as they were. To compare branches we can run:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> <span class=\"token function\">diff</span> dev\n<span class=\"token comment\"># diff --git a/hello.txt b/hello.txt</span>\n<span class=\"token comment\"># index 360c923..b7aec52 100644</span>\n<span class=\"token comment\"># --- a/hello.txt</span>\n<span class=\"token comment\"># +++ b/hello.txt</span>\n<span class=\"token comment\"># @@ -1,3 +1 @@</span>\n<span class=\"token comment\"># Hello, Git</span>\n<span class=\"token comment\"># -</span>\n<span class=\"token comment\"># -Hello, Git Branch</span>\n<span class=\"token comment\"># (END)</span>\n<span class=\"token comment\"># type \":q\" to close</span></pre></div><p>Let&#39;s make changes in main branch as well:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>Hi from Main Branch\"</span> <span class=\"token operator\">>></span> hello.txt <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> commit -am <span class=\"token string\">\"Change hello.txt from main\"</span>\n<span class=\"token comment\"># [main 9b60c4b] Change hello.txt from main</span>\n<span class=\"token comment\"># 1 file changed, 2 insertions(+)</span></pre></div><p>Now let&#39;s try to combine the changes:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> merge dev\n<span class=\"token comment\"># Auto-merging hello.txt</span>\n<span class=\"token comment\"># CONFLICT (content): Merge conflict in hello.txt</span>\n<span class=\"token comment\"># Automatic merge failed; fix conflicts and then commit the result.</span></pre></div><p>Because the file was changed in the same place twice we got a conflict. Look at the file:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">cat</span> hello.txt\n<span class=\"token operator\">&lt;&lt;&lt;</span><span class=\"token operator\">&lt;&lt;&lt;</span><span class=\"token operator\">&lt;</span> HEAD\nHello, Git\n\nHi from Main Branch\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\nHello, Git\n<span class=\"token operator\">>></span><span class=\"token operator\">>></span><span class=\"token operator\">>></span><span class=\"token operator\">></span> dev</pre></div><p>There is also a tool to see changes separately:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> <span class=\"token function\">diff</span> --ours <span class=\"token comment\"># :q to close</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> --theirs <span class=\"token comment\">#:q to close</span></pre></div><p>You can manually edit the file and commit the changes, but let&#39;s imagine we only want one of the versions. We&#39;ll start with aborting merge:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> merge --abort</pre></div><p>And restarting merge with &quot;theirs&quot; strategy, meaning that in case of conflict we&#39;ll use whatever incoming branch insists on:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> merge -X theirs dev\n<span class=\"token comment\"># Auto-merging hello.txt</span>\n<span class=\"token comment\"># Merge made by the 'recursive' strategy.</span>\n<span class=\"token comment\"># hello.txt | 5 +----</span>\n<span class=\"token comment\"># 1 file changed, 1 insertion(+), 4 deletions(-)</span></pre></div><p>The opposite to this strategy is &quot;ours&quot;. Merging both changes together will require manual editing (or use of <code>git mergetool</code>).</p>\n<p>To see list of all branches run:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> branch <span class=\"token comment\"># type :q to close</span>\n<span class=\"token comment\">#  dev</span>\n<span class=\"token comment\"># * main</span></pre></div><p>Finally, to delete the branch run:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> branch -d dev\n<span class=\"token comment\"># Deleted branch dev (was 6259828).</span></pre></div><h2 id=\"rebasing-branches\">Rebasing branches</h2>\n<p>Branches &quot;grow&quot; from a particular point in git history, <em>rebase</em> allows to change that point. Let&#39;s create another branch and add some changes to hello.txt once more time:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> checkout -b story <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Once upon a time there was a file\"</span><span class=\"token operator\">>></span>story.txt <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> story.txt <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Add story.txt\"</span>\n<span class=\"token comment\"># Switched to a new branch 'story'</span>\n<span class=\"token comment\"># [story eb996b8] Add story.txt</span>\n<span class=\"token comment\"># 1 file changed, 1 insertion(+)</span>\n<span class=\"token comment\"># create mode 100644 story.txt</span></pre></div><p>Now, let&#39;s come back to the main branch and add changes there:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> checkout main <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Other changes\"</span> <span class=\"token operator\">>></span> changes.txt <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> changes.txt <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Add changes.txt\"</span></pre></div><p>To replay the changes we made in <code>main</code> to <code>story</code> branch run:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> checkout story <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> rebase main\n<span class=\"token comment\"># Successfully rebased and updated refs/heads/story.</span></pre></div><p>You can see new file created in <code>main</code> branch being added to <code>story</code> branch:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">ls</span>\n<span class=\"token comment\"># changes.txt hello.txt   story.txt</span></pre></div><p>Word of caution: do not rebase branches that someone else might have used, e.g. the main branch. Also, keep in mind that every history manipulation on a remote repository will require forcing these changes to take effect.</p>\n<h2 id=\"remote-repository\">Remote repository</h2>\n<p>If you haven&#39;t yet, create a <a href=\"https://github.com/signup\" rel=\"noopener noreferrer\" target=\"_blank\">GitHub</a> account, login and create a <a href=\"https://github.com/new\" rel=\"noopener noreferrer\" target=\"_blank\">new empty repository</a> (private or public).</p>\n<p>Assuming the repository name was &quot;example&quot; run the following command (change to your username):</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@github.com:USERNAME/example.git <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> push -u origin main</pre></div><p>You can refresh the page and see files in main branch. To push all local branches to remote repository run:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> push --all origin</pre></div><p>Let&#39;s edit something on GitHub: just click any file and the pencil icon. Add a line with any text you want and press &quot;Commit changes&quot;.</p>\n<p>Now run this command locally to get the remote changes:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> checkout main <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> pull</pre></div><h2 id=\"managing-uncommitted-changes\">Managing uncommitted changes</h2>\n<p>If you want to save your local changes for later you can use <code>git stash</code>:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Changes\"</span> <span class=\"token operator\">>></span> hello.txt <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">git</span> stash</pre></div><p>Now you can use following command to check, apply or discard these changes:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> stash list\n<span class=\"token comment\"># stash@{0}: WIP on main: 92354c8 Update changes.txt</span>\n<span class=\"token function\">git</span> stash pop <span class=\"token comment\"># to apply changes</span>\n<span class=\"token function\">git</span> stash drop <span class=\"token comment\"># to drop changes</span></pre></div><p>Pro tip: you can use stash number, i.e. <code>git stash pop 0</code> to apply a particular stash or <code>git stash drop 0</code> to drop it.</p>\n<p>If you want to discard all local changes and simply restore repository to last committed changes run:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> restore <span class=\"token builtin class-name\">.</span></pre></div><h2 id=\"managing-committed-changes\">Managing committed changes</h2>\n<p>Once you create a commit, this change is saved in local git history. As mentioned before, all changes affecting remote history would require a <code>git push --force</code>. Keep it in mind for all following commands.</p>\n<p>Let&#39;s start with editing the last commit message :</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> commit --amend <span class=\"token comment\"># type :wq to save and close</span>\n<span class=\"token comment\"># Press \"i\" to edit, \"Esc\" to stop editing</span></pre></div><p>How about we reset everything to the very beginning?\nTo find the ID of the very first commit run this command and scroll (with arrow down) to the very end:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> log --abbrev-commit\n<span class=\"token comment\"># commit a07ee27</span>\n<span class=\"token comment\"># Author: Your Name &lt;your@email.address></span>\nDate:   Sun Jul <span class=\"token number\">11</span> <span class=\"token number\">11</span>:47:16 <span class=\"token number\">2021</span> +0200\n\n    Adds hello.txt\n<span class=\"token punctuation\">(</span>END<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># type \":q\" to close</span></pre></div><p>Now run this to reset the repository, but keep all changes unstaged:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> reset --soft COMMIT <span class=\"token comment\"># e.g. a07ee27</span></pre></div><p>As opposite to it, you can also make a hard reset and get rid of all the changes with <code>git reset --hard COMMIT</code>. There are several other types of reset that you can learn from <a href=\"https://git-scm.com/docs/git-reset\" rel=\"noopener noreferrer\" target=\"_blank\">git documentation</a></p>\n<h2 id=\"aliases\">Aliases</h2>\n<p>Most of the times you&#39;ll be using just a handful of command (checkout, add ,commit, pull, push and merge mostly), but are some things you might want to have around for &quot;just in case&quot;.</p>\n<p>One way to store those are git aliases. To configure an alias just set it in a config. For example, one alias I use a lot is <code>git tree</code>, it prints a nice history log in a form of a tree:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> config --global alias.tree <span class=\"token string\">'log --graph --decorate --pretty=oneline --abbrev-commit'</span>\n<span class=\"token comment\"># Try it with `git tree`</span></pre></div><p>Another useful alias deletes all merged branches:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">git</span> config --global alias.clbr <span class=\"token string\">'!git branch --merged | grep -v \\* | xargs git branch -D'</span></pre></div><p>As you can see it&#39;s prefixed with &quot;!&quot;, which allows us to use any command, not only git commands.</p>\n"},"how-to-use-custom-files-as-modules-in-nodejs":{"title":"How to Use Custom Files as Modules in Nodejs","date":"2021-02-21T13:49:13.000Z","tags":["javascript","node","webdev","tutorial"],"draft":false,"summary":"There are quite a few cases where you can benefit from importing an arbitrary file directly: in universal apps, tests, or simply to avoid boilerplate. Good news: you don't need Babel, Webpack, or anything else for it.\n","url":"how-to-use-custom-files-as-modules-in-nodejs","content":"<p>There are quite a few cases where you can benefit from importing an arbitrary file directly: in universal apps, tests, or simply to avoid boilerplate. Good news: you don&#39;t need Babel, Webpack, or anything else for it.</p>\n<p>For this tutorial, we&#39;ll make a server that will render a static HTML page with CSS styles, loaded as modules.</p>\n<p>Create a CSS file:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'html{background:teal;color:white;}'</span> <span class=\"token operator\">>></span> styles.css</pre></div><p>An HTML template:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n  &lt;head>\n    &lt;meta charset=\"UTF-8\" />\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    &lt;title>Example&lt;/title>\n  &lt;/head>\n  &lt;body>\n    Is background teal?\n  &lt;/body>\n&lt;/html>'</span> <span class=\"token operator\">>></span> template.html</pre></div><p>And a server to render the result:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">const</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> template <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./template.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> css <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./styles.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/head>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;style>\"</span> <span class=\"token operator\">+</span> css <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/style>&lt;/head>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">http<span class=\"token punctuation\">.</span>Server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">end</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server is listening on http://localhost:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>server<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">address</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">port</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>If you try running this file now you&#39;ll get an error:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">node</span> index\ntemplate.html:1\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n^\n\nSyntaxError: Unexpected token <span class=\"token string\">'&lt;'</span></pre></div><p>To fix it we are going to tell NodeJS how to handle these extensions. Prepare to be amazed because all the code we need is:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// hook.js</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">Module</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"module\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">resolveTextFile</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">module<span class=\"token punctuation\">,</span> path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readFileSync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  module<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> content<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_extensions</span><span class=\"token punctuation\">[</span><span class=\"token string\">\".html\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> resolveTextFile<span class=\"token punctuation\">;</span>\n<span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_extensions</span><span class=\"token punctuation\">[</span><span class=\"token string\">\".css\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> resolveTextFile<span class=\"token punctuation\">;</span></pre></div><p>Now we can start the server like this:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">node</span> -r ./hook index\n<span class=\"token comment\"># Server is listening on http://localhost:&lt;random_port></span></pre></div><p>Follow the link and you should see the HTML page with proper styles:</p>\n<p><img src=\"how-to-use-custom-files-as-modules-in-nodejs/is_bg_teal.png\" alt=\"HTML page saying &quot;Is background teal?&quot; with white letters on a teal background\"></p>\n<blockquote>\n<p>Note: If you have any troubles running this example, try using NodeJS v14.5.0.</p>\n</blockquote>\n<p>By the way, you can add <code>require(&#39;./hook&#39;)</code> directly at the beginning of <code>index.js</code> instead of using <code>-r</code> or <code>--require</code> command-line argument.</p>\n<h2 id=\"what-about-ecmascript-modules\">What about ECMAScript Modules?</h2>\n<p>Great question! ECMAScript modules support in NodeJS is still unstable, meaning that it might drastically change in the future, but as for February 2021 we can load custom modules with <code>node --experimental-loader &lt;filename&gt;</code>.</p>\n<p>My ECMAScript server module looks like this:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// index.mjs</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">http</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"http\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">template</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./template.html\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">css</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./styles.css\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/head>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;style>\"</span> <span class=\"token operator\">+</span> css <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/style>&lt;/head>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">http<span class=\"token punctuation\">.</span>Server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">end</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server module is listening on http://localhost:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>server<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">address</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">port</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>And the <a href=\"https://nodejs.org/api/esm.html#esm_loaders\" rel=\"noopener noreferrer\" target=\"_blank\">experimental loader</a> is as follows:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// loader.mjs</span>\n<span class=\"token keyword module\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">,</span> pathToFileURL <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"url\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> baseURL <span class=\"token operator\">=</span> <span class=\"token function\">pathToFileURL</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">href</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// css styles or html files</span>\n<span class=\"token keyword\">const</span> extensionsRegex <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(html|css)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">specifier<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> defaultResolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> parentURL <span class=\"token operator\">=</span> baseURL <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Node.js normally errors on unknown file extensions, so return a URL for</span>\n  <span class=\"token comment\">// specifiers ending in the specified file extensions.</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>extensionsRegex<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">test</span><span class=\"token punctuation\">(</span>specifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>specifier<span class=\"token punctuation\">,</span> parentURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">href</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Let Node.js handle all other specifiers.</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">defaultResolve</span><span class=\"token punctuation\">(</span>specifier<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> defaultResolve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFormat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> defaultGetFormat</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Now that we patched resolve to let new file types through, we need to</span>\n  <span class=\"token comment\">// tell Node.js what format such URLs should be interpreted as.</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>extensionsRegex<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">test</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Let Node.js handle all other URLs.</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">defaultGetFormat</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> defaultGetFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">transformSource</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">source<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> defaultTransformSource</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> url <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>extensionsRegex<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">test</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">source</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">export default </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Let Node.js handle all other sources.</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">defaultTransformSource</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> defaultTransformSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></pre></div><p>Don&#39;t forget to use <code>.mjs</code> extension for ES modules or otherwise enable them (e.g. set <code>&quot;type&quot;:&quot;module&quot;</code> in <code>package.json</code>).</p>\n<p>And run it with:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">node</span> --experimental-loader ./loader.mjs index.mjs\n<span class=\"token comment\"># (node:14706) ExperimentalWarning: --experimental-loader is an experimental feature. This feature could change at any time</span>\n<span class=\"token comment\"># (Use `node --trace-warnings ...` to show where the warning was created)</span>\n<span class=\"token comment\"># ESM Server is listening on http://localhost:&lt;random_port></span></pre></div><h2 id=\"what-about-typescript\">What about TypeScript?</h2>\n<p>Yet another great question! It&#39;s actually easy: we can use CommonJS approach.</p>\n<p>Let&#39;s prepare TypeScript project:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">npm</span> init -y <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> typescript @types/node ts-node --save-dev <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"module\": \"CommonJS\",\n    \"moduleResolution\": \"node\",\n    \"esModuleInterop\": true,\n    \"typeRoots\": [\"node_modules/@types\", \"typings\"]\n  },\n  \"exclude\": [\"node_modules\"]\n}\n'</span><span class=\"token operator\">>></span>tsconfig.json\n</pre></div><p>I&#39;ve set <em>esModuleInterop</em> to true to keep <code>hook.js</code> intact, otherwise, we&#39;d need to change <code>module.exports=content</code> to <code>module.exports.default=content</code>.</p>\n<p>My typed version of the infamous server:</p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token comment\">// index.ts</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Server</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"http\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">template</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./template.html\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">css</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./styles.css\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AddressInfo</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"net\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/head>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;style>\"</span> <span class=\"token operator\">+</span> css <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/style>&lt;/head>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">Server</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">end</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">TS Server is listening on http://localhost:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\n      <span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">address</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword module\">as</span> <span class=\"token maybe-class-name\">AddressInfo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">port</span>\n    <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>Once again, if we try running it now, it&#39;ll fail:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre>./node_modules/.bin/ts-node -r ./hook index.ts\n\n<span class=\"token comment\"># TSError: ⨯ Unable to compile TypeScript:</span>\n<span class=\"token comment\"># index.ts:2:22 - error TS2307: Cannot find module './template.html' or its corresponding type declarations.</span></pre></div><p>To fix it we, of course, need to provide typings for our modules. Since we&#39;ll be using <code>ts-node</code> the easiest way is to create a folder with the following structure:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">mkdir</span> -p <span class=\"token string\">\"typings/*.css\"</span> <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">mkdir</span> <span class=\"token string\">\"typings/*.html\"</span> <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'declare module \"*.css\" {\n  const content: string;\n  export default content;\n}'</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"typings/*.css/index.d.ts\"</span> <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'declare module \"*.html\" {\n  const content: string;\n  export default content;\n}'</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"typings/*.html/index.d.ts\"</span></pre></div><p>We&#39;ve already included <em>typings</em> folder in <code>tsconfig.json</code>, but you can call it anything you want as long as it&#39;s referenced:</p>\n<div class=\"highlight highlight-source-json notranslate\"><pre><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token property\">\"typeRoots\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node_modules/@types\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"typings\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></pre></div><p>Run again and enjoy refreshing teal background:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre>./node_modules/.bin/ts-node -r ./hook index.ts\n<span class=\"token comment\"># TS Server is listening on http://localhost:&lt;random_port></span></pre></div><h2 id=\"nice-whats-next\">Nice, what&#39;s next?</h2>\n<p>You could:</p>\n<ul>\n<li>Add pre- or post-processing step for the styles (e.g. use <code>sass</code>,<code>less</code> or <code>postcss</code>) or some template engine for HTML (e.g. <code>liquid</code>, <code>haml</code> or <code>pug</code>.</li>\n<li>Make a GraphQL server using <code>.graphql</code> files directly.</li>\n<li>Write unit tests for your front-end JavaScript with lightweight or custom test runners.</li>\n<li>Make your own code transpiler/bundler</li>\n</ul>\n"},"how-to-do-magic-with-numbers":{"title":"How to Do Magic With Numbers","date":"2021-01-24T11:05:13.000Z","tags":["javascript","node","webdev","tutorial"],"draft":false,"dev_to":"https://dev.to/valeriavg/how-to-do-magic-with-numbers-p6d","summary":"JavaScript Number type would have been called double or float64 in a compiled language. Therefore, numbers have some limits\n","url":"how-to-do-magic-with-numbers","content":"<p>JavaScript <code>Number</code> type would have been called <code>double</code> or <code>float64</code> in a compiled language. Therefore, numbers have some limits:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> maxInt <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_SAFE_INTEGER</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9007199254740991</span>\n<span class=\"token keyword\">const</span> minInt <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MIN_SAFE_INTEGER</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -9007199254740991</span>\nminInt <span class=\"token operator\">===</span> <span class=\"token operator\">-</span>maxInt<span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">const</span> maxDouble <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1.7976931348623157e+308</span>\n<span class=\"token keyword\">const</span> minDouble <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MIN_VALUE</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -1.7976931348623157e+308</span></pre></div><p>See that strange long number in min and max values? That is the first magical way of representing a JavaScript number: using a base and an exponent (a.k.a <code>beN</code>):</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> minusTwo <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -2</span>\n<span class=\"token keyword\">const</span> one75 <span class=\"token operator\">=</span> <span class=\"token number\">175e-2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1.75</span></pre></div><p>In practice, you specify a base number, then write <code>e</code> and specify where you want to <em>move the dot</em>. If the last number is positive - you&#39;ll be adding zeros, if negative - you&#39;ll be moving the dot to the left:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> zero <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0; move dot from 0.0 zero times</span>\n<span class=\"token keyword\">const</span> zero5 <span class=\"token operator\">=</span> <span class=\"token number\">5e-1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.5; move dot from 5.0 one time left</span>\n<span class=\"token keyword\">const</span> fifty <span class=\"token operator\">=</span> <span class=\"token number\">5e1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 50; move dot from 5.0 one time right</span>\n<span class=\"token keyword\">const</span> alsoFifty <span class=\"token operator\">=</span> <span class=\"token number\">5e1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 50</span>\n<span class=\"token keyword\">const</span> minusFifty <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">5e1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//-50; move dot from -5.0 one time right</span>\n<span class=\"token keyword\">const</span> seventeen5 <span class=\"token operator\">=</span> <span class=\"token number\">1.75e1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 17.5; move dot from 1.75 one time right</span></pre></div><p>But, this representation may be a bit hard to read, so you can also use old plain <em>decimals</em> with the underscore as a separator:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> million <span class=\"token operator\">=</span> <span class=\"token number\">1_000_000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1000000</span>\n<span class=\"token keyword\">const</span> fiveK <span class=\"token operator\">=</span> <span class=\"token number\">5_000</span> <span class=\"token comment\">// 5000</span>\n<span class=\"token keyword\">const</span> justLoveUnderscores <span class=\"token operator\">=</span> <span class=\"token number\">1_2_3.3_2_1</span> <span class=\"token comment\">//123.321</span>\n\n<span class=\"token keyword\">const</span> oops <span class=\"token operator\">=</span> 1__0 <span class=\"token comment\">// Error: Only one underscore is allowed as numeric separator</span>\n<span class=\"token keyword\">const</span> nope <span class=\"token operator\">=</span> <span class=\"token number\">0_1</span> <span class=\"token comment\">// Error: Numeric separator can not be used after leading 0</span></pre></div><p>Dealing with <em>binary</em> numbers instead? No worries, you can write it like this:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> five <span class=\"token operator\">=</span> <span class=\"token number\">0b101</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token keyword\">const</span> alsoFive <span class=\"token operator\">=</span> <span class=\"token number\">0b101</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5; `b` is case tolerant</span>\n<span class=\"token keyword\">const</span> max8bit <span class=\"token operator\">=</span> <span class=\"token number\">0b1111_1111</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 255; You can use separators in any number :-)</span>\n<span class=\"token keyword\">const</span> lessFive <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">0b0101</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -5</span></pre></div><p>Of course, <code>hexadecimal</code> numbers are also a must-have in your arsenal:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> max8bit <span class=\"token operator\">=</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 255</span>\n<span class=\"token keyword\">const</span> hexNum <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">0xabc</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -2748</span>\n<span class=\"token keyword\">const</span> max32bit <span class=\"token operator\">=</span> <span class=\"token number\">0xffff_ffff</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 4294967295; can use separators</span></pre></div><p>And, just so you know, ECMA Script 2015 introduced <code>octals</code>:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> maxBit <span class=\"token operator\">=</span> <span class=\"token number\">0o7</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 7</span>\n<span class=\"token keyword\">const</span> eight <span class=\"token operator\">=</span> <span class=\"token number\">0o10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8</span>\n<span class=\"token keyword\">const</span> funnyZero <span class=\"token operator\">=</span> <span class=\"token number\">0o0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span></pre></div><p>If so happens and you can&#39;t squeeze your integer number in 64bits, you can convert it to <code>BigInt</code> by adding an <code>n</code> to it:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> maxDouble <span class=\"token operator\">=</span> <span class=\"token number\">0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Infinity</span>\n<span class=\"token keyword\">const</span> biggerThanMaxDouble <span class=\"token operator\">=</span>\n  <span class=\"token number\">0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215n</span>\n\n<span class=\"token keyword\">const</span> bigTen <span class=\"token operator\">=</span> <span class=\"token number\">10n</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10n;</span>\n<span class=\"token keyword\">const</span> bigLess50 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">50n</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -50n</span></pre></div><p>And, there are several truly magic numbers in JavaScript:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span> <span class=\"token operator\">===</span>\n  <span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token constant\">POSITIVE_INFINITY</span> <span class=\"token operator\">-</span> <span class=\"token comment\">// true</span>\n    <span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span>\n  <span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NEGATIVE_INFINITY</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">const</span> smallestFraction <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EPSILON</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2.2204460492503130808472633361816e-16</span>\nsmallestFraction <span class=\"token operator\">===</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">52</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></pre></div><p>As everyone has that weird cousin, JavaScript numbers have a special number that is literally not a number.</p>\n<p><code>NaN</code> value is a special value, and every single operation with it will result in <code>NaN</code>, including comparison:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token number\">NaN</span> <span class=\"token operator\">===</span> <span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false !!</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token number\">NaN</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token number\">NaN</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token number\">NaN</span> <span class=\"token operator\">/</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span></pre></div><p>The most convinient way to make a <code>NaN</code> is through a failed type conversion:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.1.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token string\">\"abc\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Number {NaN}</span>\n<span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">abs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>However, there are built-in functions to help you deal with edge cases and <code>NaN</code>:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isFinite</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isFinite</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isFinite</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">9007199254740992</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true !!</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">12.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isSafeInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isSafeInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">9007199254740992</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isSafeInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">12.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isSafeInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isSafeInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// BigInts are not considered Integers:</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">1n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isSafeInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">1n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token comment\">// But it is a number:</span>\n<span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">1n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></pre></div><p>Thirsty for more? Check out <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar\" rel=\"noopener noreferrer\" target=\"_blank\">MDN Lexical grammar</a> article.</p>\n"},"5-ways-to-use-redis-in-your-next-project":{"title":"5 Ways to Use Redis in Your Next Project","date":"2020-11-17T10:43:15.000Z","tags":["redis","node","database"],"draft":false,"dev_to":"https://dev.to/valeriavg/5-ways-to-use-redis-in-your-next-project-1j2o","summary":"If the best code is no code at all, then the next best thing is code, that you can explain in one simple sentence. For example, like this: Redis holds a variety of structures in memory and lets you manage them through a text based command protocol. Despite, or maybe, because of its simplicity, Redis has plenty of utility in modern web architecture.\n","url":"5-ways-to-use-redis-in-your-next-project","content":"<p>If the best code is no code at all, then the next best thing is code, that you can explain in one simple sentence.</p>\n<p>For example, like this:</p>\n<blockquote>\n<p>Redis holds a variety of structures in memory and lets you manage them through a text based command protocol.</p>\n</blockquote>\n<p>Despite, or maybe, because of its simplicity, Redis has plenty of utility in modern web architecture.</p>\n<h2 id=\"1-key-value-storage-caching--temporary-codes\">1. Key-Value storage: Caching &amp; Temporary codes</h2>\n<p>Redis is as fast, as a data storage can possibly be, because all operations are performed entirely on in-memory data. As a bonus, you can specify time-to-live (TTL) for values.</p>\n<p><code>SET key value EX seconds</code> will store your <em>value</em> in <em>key</em> for <em>seconds</em>, which you can retrieve with <code>GET key</code>.</p>\n<p>Redis also supports key eviction, which is described in detail <a href=\"https://redis.io/topics/lru-cache\" rel=\"noopener noreferrer\" target=\"_blank\">here</a></p>\n<h2 id=\"2-pubsub-subscriptions-to-messages\">2. PubSub: subscriptions to messages</h2>\n<p>PubSub can be used for a lot of things from chat implementation to data updates and naive event management.</p>\n<p><code>SUBSCRIBE channel</code> to start listening, <code>PUBLISH channel message</code> to post a message and <code>UNSUBSCRIBE channel</code> to stop.</p>\n<p>A more detailed explanation with examples can be found in official <a href=\"https://redis.io/topics/pubsub\" rel=\"noopener noreferrer\" target=\"_blank\">docs</a></p>\n<h2 id=\"3-streams-event-streaming-for-micro-services\">3. Streams: event streaming for micro-services</h2>\n<p>Redis streams are similar PubSub, but stream messages can be marked as received. This allows Redis to be used as a core for micro-services architecture, allowing them to communicate between themselves in a reliable and fast manner. Think of Redis here as barebones Apache Kafka.</p>\n<p>One service can <code>XADD stream * field1 value1 field2 value2</code> while the others are listening via <code>XREAD stream</code>.</p>\n<p>There&#39;s much more to it, and its best described in official <a href=\"https://redis.io/topics/streams-intro\" rel=\"noopener noreferrer\" target=\"_blank\">&quot;Introduction to Redis streams&quot;</a></p>\n<h2 id=\"4-geolocation-indexing\">4. Geolocation indexing</h2>\n<p>You can add items with <code>GEOADD key longitude1 latitude1 place1 longitude2 latitude2 place2</code> and then you can:</p>\n<ul>\n<li>Calculate distance between two places with <code>GEODIST key place1 place2</code></li>\n<li>Find all items around a certain point with <code>GEORADIUS key longitude latitude radius unit</code>, where unit is m, km, ft or mi</li>\n</ul>\n<p>As you already guessed, there&#39;s more to it in <a href=\"https://redis.io/commands/geoadd\" rel=\"noopener noreferrer\" target=\"_blank\">official docs</a></p>\n<h2 id=\"5-primary-database\">5. Primary database</h2>\n<p>I love to think of Redis as a database framework. Using sets, lists and hashes you can create indexes, tailored for your data. You can check out some really nice examples on how to so it in <a href=\"https://redis.io/topics/indexes\" rel=\"noopener noreferrer\" target=\"_blank\">&quot;Secondary indexing with Redis&quot;</a>.</p>\n<p>But of course, having to build your own data structures will result in having to perform composite operations to read or manipulate data. Not to worry though, Redis has <a href=\"https://redis.io/commands/eval\" rel=\"noopener noreferrer\" target=\"_blank\">built-in scripting support</a>.</p>\n<p>For example, we could store items in hashes, their identifiers in a list and retrieve a subset of items with:</p>\n<div class=\"highlight highlight-source-lua notranslate\"><pre><span class=\"token keyword\">local</span> ids <span class=\"token operator\">=</span> redis<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lrange'</span><span class=\"token punctuation\">,</span>KEYS<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>ARGV<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>ARGV<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>id <span class=\"token keyword\">in</span> <span class=\"token function\">ipairs</span><span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">do</span>\n   <span class=\"token keyword\">local</span> key <span class=\"token operator\">=</span> KEYS<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">..</span> <span class=\"token string\">'::'</span> <span class=\"token operator\">..</span> id\n   result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> redis<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hgetall'</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span>\n   table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span>\n   table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token keyword\">return</span> result</pre></div><p>While this approach is more complicated in comparison to a &quot;real&quot; database, it does have several pros:</p>\n<ul>\n<li>Predictable speed. Using time complexity, provided in Redis docs in big O notation, you can calculate time complexity for your own scripts and complex commands.</li>\n<li>Fast reads and writes. You won&#39;t need secondary indexes or caching with other tools - Redis is fast and furious. Do try it&#39;s <a href=\"https://redis.io/topics/benchmarks\" rel=\"noopener noreferrer\" target=\"_blank\">benchmarks</a> sometime!</li>\n<li>Easy mocking for unit testing with tools like <a href=\"https://github.com/stipsan/ioredis-mock\" rel=\"noopener noreferrer\" target=\"_blank\">ioredis-mock</a> or even your own implementation.</li>\n<li>Runs in small environments. Redis has incredibly small memory footprint: 3MB for an empty instance and about 85MB for 1 million small keys! It even runs on Raspberry Pi</li>\n<li>Easy backups. Just <code>save</code> your data to <code>/var/lib/redis/dump.rdb</code></li>\n</ul>\n<p>While the cons are:</p>\n<ul>\n<li>Complexity, because with great power comes great responsibility.</li>\n<li>Data size is limited to available memory.</li>\n<li><a href=\"https://redis.io/topics/partitioning\" rel=\"noopener noreferrer\" target=\"_blank\">Limited partitioning support</a></li>\n<li>Doesn&#39;t fit for storing BLOBs</li>\n</ul>\n<p>All and all I encourage you to give Redis-as-a-database a try just to have <del>bragging rights</del> a better understanding on how data storages work.</p>\n"},"modular-architecture-plug-n-play":{"title":"Plug & Play Modular Architecture for Scalable and Maintainable Apps","date":"2023-06-27T16:24:13.000Z","tags":["architecture","javascript"],"draft":false,"twitter":"1673699596218793986","dev_to":"https://dev.to/valeriavg/plug-play-modular-architecture-for-scalable-and-maintainable-apps-2je9","summary":"A new project is always a joy: the code hasn't yet been bloated with deprecated features, rushed decisions and questionable dependencies. When my projects get to this state I become increasingly less productive and the urge to refactor grows exponentially, which, as you would imagine, halts any progress entirely.\n","url":"modular-architecture-plug-n-play","content":"<p>A new project is always a joy: the code hasn&#39;t yet been bloated with deprecated features, rushed decisions and questionable dependencies. When my projects get to this state I become increasingly less productive and the urge to refactor grows exponentially, which, as you would imagine, halts any progress entirely.</p>\n<p>After a bit of trial and error I developed some rules that help me keep the code maintainable and scalable for longer and I&#39;m excited to dive into it as <a href=\"https://dev.to/valeriavg/comment/275kp\" rel=\"noopener noreferrer\" target=\"_blank\">promised</a>.</p>\n<h2 id=\"general-idea-and-principles\">General Idea and Principles</h2>\n<p>I needed a structure that would free me from distractions as much as possible and would allow me to concentrate on task at hand. At the same time it should be possible to make changes of any magnitude confidently. And, finally, it needed to be simple and easy to replicate on different types of projects, regardless of it being a website, a mobile app or a distributed backend system as I was tinkering with them all.</p>\n<p>It might seem like a lot of requirements, but it all boils down to having a proper and very limited scope for features. While looking for ideas I stumbled upon an article (that I sadly cannot find anymore, but would love to give credit) that described modular architecture for a NodeJS app and it inspired me greatly: the core principle was that the code that belongs together should stay together and that the structure should allow easy addition and removals of features as a whole.</p>\n<p>With time I settled for the following rules when structuring an app:</p>\n<ol>\n<li><p>Each separate feature should fit entirely in it&#39;s own folder.</p>\n</li>\n<li><p>Only imports from shared folders or within current feature folder are allowed.</p>\n</li>\n<li><p>Each feature can be written and structured differently from the others, as long as it has the same &quot;public&quot; interface.</p>\n</li>\n<li><p>Features can be composed of nested features, but it shouldn&#39;t be more than two levels deep (up to a grandparent).</p>\n</li>\n<li><p>Code structure should reflect how code is deployed or packaged, if applicable.</p>\n</li>\n</ol>\n<p>For visual reference imagine a communal house with three roommates:\n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2f0n97ts6q36qy92t7nt.png\" alt=\"Top block: Shared Space:Kitchen, Bathrooms, Living Room; Three rooms below, labeled &quot;Room 1&quot;, &quot;Room 2&quot; and &quot;Room 3&quot;. Room 1 has a &quot;Bed&quot; and a &quot;Drawer&quot;, Room 2 has a &quot;Bed&quot; and &quot;Walk-in closet&quot; that in it&#39;s turn has &quot;Shoes&quot;, &quot;Dresses&quot;, and &quot;Lingerie&quot;. Room 3 has nothing but a &quot;Mattress&quot;\"></p>\n<p>Each one of them can use shared space, provided they&#39;d keep it tidy and don&#39;t leave anything that&#39;s not necessary there. Roommates would not allow other roommates take things from their rooms; and anyone of them might move out at any given time and it shouldn&#39;t affect the others. At the same time every roommate should be free to organise their space to their liking and do whatever they please there.</p>\n<p>As you can see this structure works perfectly for dorm living arrangements ;-) Let&#39;s see how it might look like for actual apps. I&#39;ll use JavaScript and some popular frameworks, but it should be possible to apply this paradigm for any other language or tool as well.</p>\n<h2 id=\"react-frontend-app-dashboard\">React Frontend App: Dashboard</h2>\n<p>Say you&#39;re working on an internal tool to manage some eCommerce website. You&#39;d probably need the following features:</p>\n<ul>\n<li>Ability to authenticate users</li>\n<li>Ability to manage blog posts</li>\n<li>Ability to see and manage the shop</li>\n</ul>\n<p>I created React App with:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">npm</span> create vite@latest</pre></div><p>And outlined the basic folder structure: \n<img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u03mgph4tkghu15w4m27.png\" alt=\"New folders within &quot;src&quot;: &quot;context&quot;,&quot;components&quot; and &quot;modules&quot;. Modules have &quot;authentication&quot;,&quot;blog&quot; and &quot;shop&quot;\"></p>\n<p>Each module will have it&#39;s own set of dynamic and static pages and, probably, menu elements. Let&#39;s add a router:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">npm</span> i react-router-dom --save-dev</pre></div><p>And define the interface for the modules in <code>src/types.d.ts</code>:</p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">ReactComponentElement</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">RouteObject</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> global <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">AppMenu</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">AppModule</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    routes<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">RouteObject</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> menu<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppMenu</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ReactNode</span><span class=\"token punctuation\">,</span> modules<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppModule</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token maybe-class-name\">ReactNode</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</pre></div><p>The gist of each module is a set of routes, with the addition of a wrapper to allow access to other modules, e.g. for the menu, as well as allow different layouts, e.g. for login page.</p>\n<p>And example module would look like this:</p>\n<div class=\"highlight highlight-source-tsx notranslate\"><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> wrapper <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"../../components/Layout\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">CategoriesPage</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./categories/CategoriesPage\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">OrdersPage</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./orders/CategoriesPage\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> shopModule<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppModule</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">\"/categories\"</span><span class=\"token punctuation\">,</span>\n      element<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CategoriesPage</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n      menu<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"Category\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"/products\"</span><span class=\"token punctuation\">,</span> element<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OrdersPage</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> menu<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"products\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"/orders\"</span><span class=\"token punctuation\">,</span> element<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OrdersPage</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> menu<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> <span class=\"token string\">\"orders\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  wrapper<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> shopModule<span class=\"token punctuation\">;</span></pre></div><p>Then the code to connect multiple modules together could look like this:</p>\n<div class=\"highlight highlight-source-tsx notranslate\"><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">RouteObject</span><span class=\"token punctuation\">,</span>\n  <span class=\"token maybe-class-name\">RouterProvider</span><span class=\"token punctuation\">,</span>\n  createBrowserRouter<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">modules</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./modules\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">ReactNode</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> wrapWithLayout <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">RouteObject</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  wrapper<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ReactNode</span><span class=\"token punctuation\">,</span> modules<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AppModule</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token maybe-class-name\">ReactNode</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">RouteObject</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> routes<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token spread operator\">...</span>route<span class=\"token punctuation\">,</span>\n    element<span class=\"token operator\">:</span> wrapper <span class=\"token operator\">?</span> <span class=\"token function\">wrapper</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span><span class=\"token property-access\">element</span><span class=\"token punctuation\">,</span> modules<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> route<span class=\"token punctuation\">.</span><span class=\"token property-access\">element</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">createBrowserRouter</span><span class=\"token punctuation\">(</span>\n  modules<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span>a<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span><span class=\"token method function property-access\">wrapWithLayout</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token property-access\">routes</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span><span class=\"token property-access\">wrapper</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword module\">as</span> <span class=\"token maybe-class-name\">RouteObject</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">App</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RouterProvider</span></span> <span class=\"token attr-name\">router</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>router<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></pre></div><p>You can check full implementation and try it yourself in this <a href=\"https://github.com/ValeriaVG/modular-arch/tree/main/dashboard\" rel=\"noopener noreferrer\" target=\"_blank\">example repo</a>.</p>\n<h2 id=\"nodejs-api-with-express\">NodeJS API with Express</h2>\n<p>For this example let&#39;s bootstrap it with express.js:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">npm</span> init -y <span class=\"token operator\">&amp;&amp;</span> \n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> express --save <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> @types/express typescript ts-node-dev --save-dev </pre></div><p>Add <code>tsconfig.json</code>:</p>\n<div class=\"highlight highlight-source-json notranslate\"><pre><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"classic\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"ts-node\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"src/types.d.ts\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</pre></div><p>And, once again, let&#39;s create basic interface for the modules:</p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token comment\">//src/types.d.ts</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Express</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> global <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">APIModule</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    middleware<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>app<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Express</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></pre></div><p>An example module could look like this:</p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token keyword\">const</span> helloModule<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">APIModule</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">middleware</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello/:name\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> hello<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">params</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> helloModule</pre></div><p>And the glue to make all the modules and app as a whole work together is as simple as:</p>\n<div class=\"highlight highlight-source-ts notranslate\"><pre><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Express</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">healthModule</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./health/index\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">helloModule</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./hello/index\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> modules <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>healthModule<span class=\"token punctuation\">,</span> helloModule<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Express</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodules<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span>mod<span class=\"token arrow operator\">=></span>mod<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">middleware</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Listening on http://localhost:3000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>You can explore the full example in <a href=\"https://github.com/ValeriaVG/modular-arch/tree/main/api\" rel=\"noopener noreferrer\" target=\"_blank\">this repo</a>.</p>\n<p>With middleware one can overload context and handle bunch of complex use cases, including authentication, but most importantly this kind of structure allows almost seamless migration to microservices architecture!</p>\n<p>Not a fan of Express or middleware? Check out my work-in-progress <a href=\"https://github.com/en-di/web-core/tree/main/cms/api\" rel=\"noopener noreferrer\" target=\"_blank\">Deno headless CMS implementation</a> that is built using the same principles.</p>\n<p>Those examples are relatively simple, but the only difference between these projects and bigger systems are amount of folders within <code>modules</code>! And those of you who enjoy freelancing or consulting could appreciate building a library of &quot;modules&quot; to reuse, I sure did ;-) </p>\n<p>So, what do you think? Ready to give it a try? \nI&#39;d love to see what implementations you come up with! </p>\n"},"master-binary-in-five-minutes":{"title":"Master Binary in Five Minutes","date":"2021-06-13T08:37:41.000Z","tags":["webdev","javascript","beginners","tutorial"],"draft":false,"dev_to":"https://dev.to/valeriavg/master-binary-in-five-minutes-2lj5","summary":"Binary is the very core of everything digital, not only in web development, but literally everything: from variables and file data to transport protocols and executables themselves.\n","url":"master-binary-in-five-minutes","content":"<p>Binary is the very core of everything digital, not only in web development, but literally everything: from variables and file data to transport protocols and executables themselves.</p>\n<p><em>Binary</em> means that there are only two values you can operate: yes and no. Or <em>on</em> and <em>off</em>, if you will. Or 0 and 1. If you have one light bulb you could use it to signal to your friend across the street something you&#39;ve agreed on, e.g. <em>light on</em> would mean that you&#39;re up for a party and <em>off</em> - that you don&#39;t want to be disturbed today.</p>\n<p>The possibilities grow with the amount of light bulbs you have. With a bunch you can encode any number or any letter and join them into phrases. Of course, computers don&#39;t really have a couple of &quot;bulbs&quot;. In fact, the laptop I&#39;m using to write this article has 16Gb of operational memory. That means that I can operate a 128 billion cells long stack of data. This tiny &quot;cell&quot;, that can be either 0 or 1, is called a <em>bit</em>.</p>\n<h2 id=\"binary-number-system\">Binary number system</h2>\n<p>We normally count in the decimal number system. This means that we can use 0,1,2,3,4,5,6,7,8,9 and, if we need to describe a number, higher than that, we add more digits: 10,11,12 etc. Now, if we limit ourselves to just two digits: 0 and 1 and follow the same principle we will get: 0, 1, 10, 11, 100, 101 etc. This is the <em>binary number system</em>.</p>\n<p>I&#39;ll not dive into the conversion between systems, but in JavaScript you could do it with:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// try in node repl (just `node`) or your browser console</span>\n<span class=\"token number\">0</span><span class=\"token function\">b101</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// 5</span>\n  <span class=\"token number\">5</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '101'</span></pre></div><p>You don&#39;t really need to convert anything, apart from debugging and very rare cases: <code>0b101</code> it&#39;s just a <code>5</code> entered in a different way, behind the curtains everything that your program operates is in binary form.</p>\n<h2 id=\"binary-logic\">Binary logic</h2>\n<p>Binary operations are limited to <code>and</code>,<code>or</code> and <code>xor</code> (exclusive &quot;or&quot;) for two operands and unary <code>shift</code> and <code>not</code> operations.</p>\n<p><em>Bitwise</em> operations are performed on every single &quot;pair&quot;.\nThe rules are quite simple:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// bitwise \"and\"</span>\n<span class=\"token comment\">// 1 only if both values are 1</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n<span class=\"token number\">0b101</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0b110</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 4 (0b100)</span>\n\n<span class=\"token comment\">// bitwise \"or\"</span>\n<span class=\"token comment\">// 1 if any value is 1</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">|</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token number\">0b101</span> <span class=\"token operator\">|</span> <span class=\"token number\">0b110</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 7 (0b111)</span>\n\n<span class=\"token comment\">// bitwise \"xor\"</span>\n<span class=\"token comment\">// same as or, except both 1 will produce 0</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">^</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">^</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">^</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token number\">0b101</span> <span class=\"token operator\">^</span> <span class=\"token number\">0b110</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3 (0b011)</span></pre></div><p>These operations are essential because all the digital math is done using them. And in their raw form they can be used to manage boolean flags among other things:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// [hot][smart][funny]</span>\n<span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token number\">0b000</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// make them hot</span>\nperson <span class=\"token operator\">|=</span> <span class=\"token number\">0b100</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 4 (0b100)</span>\n<span class=\"token comment\">// make them smart</span>\nperson <span class=\"token operator\">|=</span> <span class=\"token number\">0b010</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 6 (0b110)</span>\n<span class=\"token comment\">// make them funny</span>\nperson <span class=\"token operator\">|=</span> <span class=\"token number\">0b001</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 7 (0b111)</span>\n\n<span class=\"token comment\">// are they hot?</span>\n<span class=\"token known-class-name class-name\">Boolean</span><span class=\"token punctuation\">(</span>person <span class=\"token operator\">&amp;</span> <span class=\"token number\">0b100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token comment\">// are they smart?</span>\n<span class=\"token known-class-name class-name\">Boolean</span><span class=\"token punctuation\">(</span>person <span class=\"token operator\">&amp;</span> <span class=\"token number\">0b010</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token comment\">// are they funny?</span>\n<span class=\"token known-class-name class-name\">Boolean</span><span class=\"token punctuation\">(</span>person <span class=\"token operator\">&amp;</span> <span class=\"token number\">0b001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></pre></div><p>Keep in mind, that unary <em>not</em> operation may produce unexpected results on JavaScript numbers:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// bitwise \"not\"</span>\n<span class=\"token comment\">// flip values: turn 0 to 1 and 1 to 0</span>\n<span class=\"token operator\">~</span><span class=\"token number\">0b01</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// you'd correctly expect 0b10 or 2, but you'll get -2</span>\n<span class=\"token operator\">~</span><span class=\"token number\">0b011111111111111111111111111111111</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span></pre></div><p>This happens because JavaScript stores numbers as <em>doubles</em>: a 64 bit representation with one bit in particular being the sign bit. So when we flip what we imagine to be a <code>01</code>, we are actually flipping a 64 digit long binary, and end up flipping the sign bit as well.</p>\n<p>To get rid of some unwanted bits (like the sign bit for instance), we can use <em>shift</em> operation:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// left shift</span>\n<span class=\"token comment\">// throws X digits off the left edge</span>\n<span class=\"token comment\">// adding X zeros on the right</span>\n<span class=\"token number\">0b01</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2 (0b10)</span>\n\n<span class=\"token comment\">// right shift</span>\n<span class=\"token comment\">// throws X digits off the right edge</span>\n<span class=\"token comment\">// adding X zeros on the left</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b01</span> <span class=\"token operator\">>></span>\n  <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token comment\">// 0 (0b00)</span>\n    <span class=\"token comment\">// unsigned right shift</span>\n    <span class=\"token comment\">// same as right shift, but always turns sign bit to 0</span>\n    <span class=\"token comment\">// making result always positive</span>\n    <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span>\n  <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token comment\">// 2147483647</span>\n    <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span>\n  <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -1</span>\n<span class=\"token number\">2</span> <span class=\"token operator\">>>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span></pre></div><h2 id=\"octals--hex\">Octals &amp; Hex</h2>\n<p>So far we have only been using bitwise logic to operate numbers, but even they are quite lengthy in JavaScript as we found out. To simplify things, the bits are grouped into 8-bit long <em>bytes</em>:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">//[0][0][0][0][1][0][1][0]</span>\n<span class=\"token number\">0b00001010</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span>\n<span class=\"token number\">0o12</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span>\n<span class=\"token number\">0xa</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span></pre></div><p>The last two lines in the example above show representation of the same decimal number 10 in 8-based number system (<em>octal</em>) and 16-based number system (<em>hexadecimal</em>). Those two are just a short way of recording binary data and, if you ever need to you can convert to these systems the same way we did with the binary:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// 12</span>\n    <span class=\"token number\">10</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// a</span></pre></div><h1 id=\"binary-data\">Binary data</h1>\n<p>Of course, numbers are not the only thing you can store.\nTo store strings, for example, we could assign each letter to a number. Different agreements on how letters translate to numbers are called <em>encoding</em> or <em>charset</em>. Take a look at this example:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> hello <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Uint8Array(6) [ 72, 101, 108, 108, 111, 33 ]</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">decode</span><span class=\"token punctuation\">(</span>hello<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 'Hello!'</span></pre></div><p>In JavaScript a raw chunk of binary data can be stored in <code>Uint8Array</code>. As the name suggest, it&#39;s and array of 8 bit unsigned values. However, it&#39;s not the most conventional abstraction if you need to get data in certain positions and intervals. But that&#39;s when <code>DataView</code> and <code>ArrayBuffer</code> (and additionally <code>Buffer</code> in node) come in:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// Create empty buffer with 6 bytes</span>\n<span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Create buffer view</span>\n<span class=\"token keyword\">const</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Record some data</span>\nview<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setUint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// H</span>\nview<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setUint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e</span>\nview<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setUint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// l</span>\nview<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setUint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// l</span>\nview<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setUint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// o</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">decode</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// \"Hello\\u0000\"</span>\n<span class=\"token comment\">// or 'Hello\\x00' in node</span></pre></div><p><code>DataView</code> has many other useful functions, e.g. <code>getInt32</code> or even <code>setBigInt64</code>, allowing you to write and read longer values than just one byte and assign them to a proper type.</p>\n<p>Ability to slice and dice raw binary data comes in handy when you need to implement a protocol (TCP, SMTP, FTP etc) or coder/decoder for a specific file format to name a few.</p>\n<p>Let&#39;s take a look on a real world example. In particular on this post cover image data:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// Open browser console on this page</span>\n<span class=\"token keyword\">const</span> img <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"header img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Get data</span>\n<span class=\"token keyword\">let</span> buffer<span class=\"token punctuation\">;</span>\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token property-access\">src</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> r<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">arrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ArrayBuffer(392)</span>\n<span class=\"token comment\">// [82, 73, 70, 70, 128, 1, 0, 0, 87, 69, 66 ....]</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ascii\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">decode</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"RIFF\"</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ascii\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">decode</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"WEBP\"</span></pre></div><p>We got the exact values<a href=\"https://developers.google.com/speed/webp/docs/riff_container\" rel=\"noopener noreferrer\" target=\"_blank\">WebP specification</a> describes. But we did skip some data between &quot;RIFF&quot; and &quot;WEBP&quot;, can you read file size there with <code>DataView</code>?</p>\n<p>Hint: order in which we &quot;read&quot; binary numbers bytes is specified by <code>endianness</code> and <code>little endian</code> means that the closer to the end the smaller the address number, i.e. right to left. Here&#39;s an example:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// 01 00 00 00 = 32 bit integer 1 in little-endian</span>\n<span class=\"token comment\">// 00 00 00 01 = 32 bit integer 1 in big-endian</span>\n<span class=\"token keyword\">const</span> littleEndian <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">buffer</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlittleEndian<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getUint32</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// littleEndian: true</span>\n<span class=\"token comment\">// 1</span>\n<span class=\"token keyword\">const</span> bigEndian <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">buffer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbigEndian<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getUint32</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// littleEndian: false</span>\n<span class=\"token comment\">// 1</span></pre></div><p>Congratulations on making it to the end. I hope you won&#39;t feel intimidated by binary protocols or formats anymore.</p>\n"},"crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark":{"title":"Crc 32 Checksum in Wasm and Raw Js Tutorial and Benchmark","date":"2021-07-07T20:49:55.000Z","tags":["webassembly","webdev","performance","tutorial"],"draft":false,"summary":"In this tutorial we'll build a cyclic redundancy check (CRC) hashing function. More specifically, its 32 bit variant called \"CRC-32\". I bumped into it in the PNG specification, but it's also used in Gzip and bunch of other formats and protocols. In short, it makes a tiny (4 bytes) hash out of whatever binary data you feed to it and changes significantly if data changes even slightly. Of course, such a tiny function is not even close to be crypto secure, therefore it's only used to check if data was transferred correctly.\n","url":"crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark","content":"<p>In this tutorial we&#39;ll build a <a href=\"https://en.wikipedia.org/wiki/Cyclic_redundancy_check\" rel=\"noopener noreferrer\" target=\"_blank\">cyclic redundancy check (CRC)</a> hashing function. More specifically, its 32 bit variant called &quot;CRC-32&quot;. I bumped into it in the PNG specification, but it&#39;s also used in Gzip and bunch of other formats and protocols. In short, it makes a tiny (4 bytes) hash out of whatever binary data you feed to it and changes significantly if data changes even slightly. Of course, such a tiny function is not even close to be crypto secure, therefore it&#39;s only used to check if data was transferred correctly.</p>\n<!--more-->\n\n<p>I love JavaScript, but writing binary algorithm implementations in it is a torture thanks to signed integers conversion in bitwise operations. So, I&#39;ve decided to write implementation in a strongly typed system language, my other favourite, <code>rust</code> and compile it to WebAssembly.</p>\n<h2 id=\"what-is-webassembly\">What is WebAssembly</h2>\n<p>WebAssembly (a.k.a. WASM) provides a virtual machine that can be created from JavaScript environment (browser, nodejs or deno). This machine is super limited and runs only one binary program in a sandbox environment. It might sound boring, but, in fact, it can run almost anything: media manipulation software, AI, games - you name it.</p>\n<h2 id=\"installing-rust-and-wasm-tooling\">Installing rust and wasm tooling</h2>\n<p>If you are on a MacOS/Linux/other Unix machine installing rust is as simple as running this command in a terminal and following interactive instructions:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">curl</span> --proto <span class=\"token string\">'=https'</span> --tlsv1.2 -sSf https://sh.rustup.rs <span class=\"token operator\">|</span> <span class=\"token function\">sh</span></pre></div><p>To install on other OS refer to <a href=\"https://www.rust-lang.org/tools/install\" rel=\"noopener noreferrer\" target=\"_blank\">rustup installation instructions</a></p>\n<p>Once you&#39;re done this should work:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre>rustc --version\n<span class=\"token comment\"># rustc 1.53.0 (53cb7b09b 2021-06-17)</span></pre></div><p>Next step is to install <code>wasm-pack</code>, a tool that compiles your WebAssembly module, generates JavaScript glue and TypeScript types for it.</p>\n<p>If you&#39;re on a Unix machine the command is:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">curl</span> https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf <span class=\"token operator\">|</span> <span class=\"token function\">sh</span></pre></div><p>For other OS: refer to <a href=\"https://rustwasm.github.io/wasm-pack/installer/\" rel=\"noopener noreferrer\" target=\"_blank\">wasm-pack installation instructions</a>.</p>\n<p>Once again, make sure it&#39;s working:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre>wasm-pack --version\n<span class=\"token comment\"># wasm-pack 0.10.0</span></pre></div><h2 id=\"creating-rust-project\">Creating rust project</h2>\n<p>Rust comes with its own dependency manager <code>cargo</code>. It also helps with some routine operations, like project creation. Run this command to generate project folder and navigate into it:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre>cargo new --lib wasm-test <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> wasm-test</pre></div><p>We should add crate type (<em>cdylib</em>) and the wasm binding dependency (<em>wasm-bindgen</em>) in the generated <code>Cargo.toml</code>:</p>\n<div class=\"highlight highlight-source-toml notranslate\"><pre><span class=\"token punctuation\">[</span><span class=\"token table class-name\">package</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"wasm-test\"</span>\n<span class=\"token key property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"0.1.0\"</span>\n<span class=\"token key property\">edition</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"2018\"</span>\n\n<span class=\"token comment\"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token table class-name\">lib</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">crate-type</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"cdylib\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token table class-name\">dependencies</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">wasm-bindgen</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"0.2\"</span></pre></div><p>Now let&#39;s add the CRC-32 algorithm implementation to <code>src/lib.rs</code>:</p>\n<div class=\"highlight highlight-source-rust notranslate\"><pre><span class=\"token keyword\">use</span> <span class=\"token namespace\">wasm_bindgen<span class=\"token punctuation\">::</span>prelude<span class=\"token punctuation\">::</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Pre-computed, see tests</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CRC_TABLE</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">u32</span><span class=\"token punctuation\">;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1996959894</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3993919788</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2567524794</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124634137</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1886057615</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3915621685</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2657392035</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">249268274</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2044508324</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3772115230</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2547177864</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162941995</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2125561021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3887607047</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2428444049</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">498536548</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1789927666</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4089016648</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2227061214</span><span class=\"token punctuation\">,</span> <span class=\"token number\">450548861</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1843258603</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4107580753</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2211677639</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">325883990</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1684777152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4251122042</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2321926636</span><span class=\"token punctuation\">,</span> <span class=\"token number\">335633487</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1661365465</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4195302755</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2366115317</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">997073096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1281953886</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3579855332</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2724688242</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1006888145</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1258607687</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3524101629</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2768942443</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">901097722</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1119000684</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3686517206</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2898065728</span><span class=\"token punctuation\">,</span> <span class=\"token number\">853044451</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1172266101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3705015759</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2882616665</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">651767980</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1373503546</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3369554304</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3218104598</span><span class=\"token punctuation\">,</span> <span class=\"token number\">565507253</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1454621731</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3485111705</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3099436303</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">671266974</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1594198024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3322730930</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2970347812</span><span class=\"token punctuation\">,</span> <span class=\"token number\">795835527</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1483230225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3244367275</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3060149565</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1994146192</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31158534</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2563907772</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4023717930</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1907459465</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112637215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2680153253</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3904427059</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">2013776290</span><span class=\"token punctuation\">,</span> <span class=\"token number\">251722036</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2517215374</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3775830040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2137656763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141376813</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2439277719</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3865271297</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1802195444</span><span class=\"token punctuation\">,</span> <span class=\"token number\">476864866</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2238001368</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4066508878</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1812370925</span><span class=\"token punctuation\">,</span> <span class=\"token number\">453092731</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2181625025</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4111451223</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1706088902</span><span class=\"token punctuation\">,</span> <span class=\"token number\">314042704</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2344532202</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4240017532</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1658658271</span><span class=\"token punctuation\">,</span> <span class=\"token number\">366619977</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2362670323</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4224994405</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1303535960</span><span class=\"token punctuation\">,</span> <span class=\"token number\">984961486</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2747007092</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3569037538</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1256170817</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1037604311</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2765210733</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3554079995</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1131014506</span><span class=\"token punctuation\">,</span> <span class=\"token number\">879679996</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2909243462</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3663771856</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1141124467</span><span class=\"token punctuation\">,</span> <span class=\"token number\">855842277</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2852801631</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3708648649</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1342533948</span><span class=\"token punctuation\">,</span> <span class=\"token number\">654459306</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3188396048</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3373015174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1466479909</span><span class=\"token punctuation\">,</span> <span class=\"token number\">544179635</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3110523913</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3462522015</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1591671054</span><span class=\"token punctuation\">,</span> <span class=\"token number\">702138776</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2966460450</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3352799412</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1504918807</span><span class=\"token punctuation\">,</span> <span class=\"token number\">783551873</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3082640443</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3233442989</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">3988292384</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2596254646</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62317068</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1957810842</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3939845945</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2647816111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81470997</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1943803523</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">3814918930</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2489596804</span><span class=\"token punctuation\">,</span> <span class=\"token number\">225274430</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2053790376</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3826175755</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2466906013</span><span class=\"token punctuation\">,</span> <span class=\"token number\">167816743</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2097651377</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">4027552580</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2265490386</span><span class=\"token punctuation\">,</span> <span class=\"token number\">503444072</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1762050814</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4150417245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2154129355</span><span class=\"token punctuation\">,</span> <span class=\"token number\">426522225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1852507879</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">4275313526</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2312317920</span><span class=\"token punctuation\">,</span> <span class=\"token number\">282753626</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1742555852</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4189708143</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2394877945</span><span class=\"token punctuation\">,</span> <span class=\"token number\">397917763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1622183637</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">3604390888</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2714866558</span><span class=\"token punctuation\">,</span> <span class=\"token number\">953729732</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1340076626</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3518719985</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2797360999</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1068828381</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1219638859</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">3624741850</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2936675148</span><span class=\"token punctuation\">,</span> <span class=\"token number\">906185462</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1090812512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3747672003</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2825379669</span><span class=\"token punctuation\">,</span> <span class=\"token number\">829329135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1181335161</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">3412177804</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3160834842</span><span class=\"token punctuation\">,</span> <span class=\"token number\">628085408</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1382605366</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3423369109</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3138078467</span><span class=\"token punctuation\">,</span> <span class=\"token number\">570562233</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1426400815</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">3317316542</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2998733608</span><span class=\"token punctuation\">,</span> <span class=\"token number\">733239954</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1555261956</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3268935591</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3050360625</span><span class=\"token punctuation\">,</span> <span class=\"token number\">752459403</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1541320221</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">2607071920</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3965973030</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1969922972</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40735498</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2617837225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3943577151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1913087877</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83908371</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">2512341634</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3803740692</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2075208622</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213261112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2463272603</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3855990285</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2094854071</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198958881</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">2262029012</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4057260610</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1759359992</span><span class=\"token punctuation\">,</span> <span class=\"token number\">534414190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2176718541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4139329115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1873836001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">414664567</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">2282248934</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4279200368</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1711684554</span><span class=\"token punctuation\">,</span> <span class=\"token number\">285281116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2405801727</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4167216745</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1634467795</span><span class=\"token punctuation\">,</span> <span class=\"token number\">376229701</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">2685067896</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3608007406</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1308918612</span><span class=\"token punctuation\">,</span> <span class=\"token number\">956543938</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2808555105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3495958263</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1231636301</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1047427035</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">2932959818</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3654703836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1088359270</span><span class=\"token punctuation\">,</span> <span class=\"token number\">936918000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2847714899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3736837829</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1202900863</span><span class=\"token punctuation\">,</span> <span class=\"token number\">817233897</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">3183342108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3401237130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1404277552</span><span class=\"token punctuation\">,</span> <span class=\"token number\">615818150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3134207493</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3453421203</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1423857449</span><span class=\"token punctuation\">,</span> <span class=\"token number\">601450431</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">3009837614</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3294710456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1567103746</span><span class=\"token punctuation\">,</span> <span class=\"token number\">711928724</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3020668471</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3272380065</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1510334235</span><span class=\"token punctuation\">,</span> <span class=\"token number\">755167117</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Reference implementation\n * http://libpng.org/pub/png/spec/iso/index-object.html#D-CRCAppendix\n */</span>\n\n<span class=\"token attribute attr-name\">#[wasm_bindgen]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">crc</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Vec</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">u8</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">u32</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> c<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u32</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> buf <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> idx<span class=\"token punctuation\">:</span> <span class=\"token keyword\">usize</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c <span class=\"token keyword\">as</span> <span class=\"token keyword\">usize</span> <span class=\"token operator\">^</span> v <span class=\"token keyword\">as</span> <span class=\"token keyword\">usize</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n        c <span class=\"token operator\">=</span> <span class=\"token constant\">CRC_TABLE</span><span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    c <span class=\"token operator\">^</span> <span class=\"token number\">0xffffffff</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token attribute attr-name\">#[cfg(test)]</span>\n<span class=\"token keyword\">mod</span> <span class=\"token module-declaration namespace\">tests</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">use</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">::</span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token attribute attr-name\">#[test]</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">test_table</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> crc_table<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">u32</span><span class=\"token punctuation\">;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> c<span class=\"token punctuation\">:</span> <span class=\"token keyword\">usize</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token number\">0</span><span class=\"token punctuation\">..</span><span class=\"token number\">256</span> <span class=\"token punctuation\">{</span>\n            c <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token number\">0</span><span class=\"token punctuation\">..</span><span class=\"token number\">8</span> <span class=\"token punctuation\">{</span>\n                c <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token number\">0xedb88320</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    c <span class=\"token operator\">>></span> <span class=\"token number\">1</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            crc_table<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c <span class=\"token keyword\">as</span> <span class=\"token keyword\">u32</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token macro property\">assert_eq!</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CRC_TABLE</span><span class=\"token punctuation\">,</span> crc_table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token attribute attr-name\">#[test]</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">test_iend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token macro property\">assert_eq!</span><span class=\"token punctuation\">(</span><span class=\"token function\">crc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IEND\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">as_bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_vec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE426082</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div><p>The implementation uses pre-computed table for each byte value from 0x00 to 0xff and boils down to couple bitwise operations.</p>\n<p>Macros <code>#[wasm_bindgen]</code> marks the function we want to export.</p>\n<p>The unit tests in the end of the file can be run with:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre>cargo <span class=\"token builtin class-name\">test</span>\n\n<span class=\"token comment\"># running 2 tests</span>\n<span class=\"token comment\"># test tests::test_iend ... ok</span>\n<span class=\"token comment\"># test tests::test_table ... ok</span>\n\n<span class=\"token comment\"># test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s</span></pre></div><h2 id=\"compiling-wasm-for-web-browser\">Compiling WASM for Web Browser</h2>\n<p>Run this command:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre>wasm-pack build --target web --release</pre></div><p>It creates a <code>pkg</code> folder with WASM module, TypeScript types, <code>package.json</code> and the main <code>wasm_test.js</code> file.</p>\n<p>Let&#39;s create <code>index.html</code> file in the project root and import the generated script from there:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>WASM Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Place your data here<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\nHello,WASM!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span>\n      <span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span>\n        <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">readonly</span>\n        <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Resulting HEX will be displayed here<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">disabled</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Calculate CRC-32<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword module\">import</span> <span class=\"token imports\">init<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> crc <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./pkg/wasm_test.js\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> btn <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        btn<span class=\"token punctuation\">.</span><span class=\"token property-access\">disabled</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        btn<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">encode</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          output<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token operator\">=</span> <span class=\"token function\">crc</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></div><p>For security reasons you won&#39;t be able to test this html file by simply opening it, but you can start a simple file server with:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre>npx serve <span class=\"token builtin class-name\">.</span>\n<span class=\"token comment\"># npx: installed 88 in 6.469s</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\">#   ┌────────────────────────────────────────┐</span>\n<span class=\"token comment\">#   │                                        │</span>\n<span class=\"token comment\">#   │   Serving!                             │</span>\n<span class=\"token comment\">#   │                                        │</span>\n<span class=\"token comment\">#   │   Local:  http://localhost:5000        │</span>\n<span class=\"token comment\">#   │                                        │</span>\n<span class=\"token comment\">#   │   Copied local address to clipboard!   │</span>\n<span class=\"token comment\">#   │                                        │</span>\n<span class=\"token comment\">#   └────────────────────────────────────────┘</span>\n<span class=\"token comment\">#</span></pre></div><p>If you can&#39;t run this command, that probably means that either <a href=\"https://nodejs.org/en/download/\" rel=\"noopener noreferrer\" target=\"_blank\">NodeJS</a> or NPM is not installed.</p>\n<p>Navigate your browser to <code>http://localhost:5000</code> and click the &quot;Calculate CRC-32&quot; button to see something like this:\n<img src=\"crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark/hello_wasm.png\" alt=\"CRC-32 of &quot;Hello,WASM!&quot; is &quot;ce9e250b&quot;\"></p>\n<h2 id=\"comparing-js-and-wasm-performance\">Comparing JS and WASM performance</h2>\n<p>Let&#39;s create nearly identical JavaScript implementation of CRC-32 in <code>crc.js</code>:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">CRC_TABLE</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1996959894</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3993919788</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2567524794</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124634137</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1886057615</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3915621685</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2657392035</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249268274</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2044508324</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3772115230</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2547177864</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162941995</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2125561021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3887607047</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2428444049</span><span class=\"token punctuation\">,</span> <span class=\"token number\">498536548</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1789927666</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4089016648</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2227061214</span><span class=\"token punctuation\">,</span> <span class=\"token number\">450548861</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1843258603</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4107580753</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2211677639</span><span class=\"token punctuation\">,</span> <span class=\"token number\">325883990</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1684777152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4251122042</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2321926636</span><span class=\"token punctuation\">,</span> <span class=\"token number\">335633487</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1661365465</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4195302755</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2366115317</span><span class=\"token punctuation\">,</span> <span class=\"token number\">997073096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1281953886</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3579855332</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2724688242</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1006888145</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1258607687</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3524101629</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2768942443</span><span class=\"token punctuation\">,</span> <span class=\"token number\">901097722</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1119000684</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3686517206</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2898065728</span><span class=\"token punctuation\">,</span> <span class=\"token number\">853044451</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1172266101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3705015759</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2882616665</span><span class=\"token punctuation\">,</span> <span class=\"token number\">651767980</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1373503546</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3369554304</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3218104598</span><span class=\"token punctuation\">,</span> <span class=\"token number\">565507253</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1454621731</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3485111705</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3099436303</span><span class=\"token punctuation\">,</span> <span class=\"token number\">671266974</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1594198024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3322730930</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2970347812</span><span class=\"token punctuation\">,</span> <span class=\"token number\">795835527</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1483230225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3244367275</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3060149565</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1994146192</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31158534</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2563907772</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">4023717930</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1907459465</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112637215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2680153253</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3904427059</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2013776290</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">251722036</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2517215374</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3775830040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2137656763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141376813</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2439277719</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3865271297</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1802195444</span><span class=\"token punctuation\">,</span> <span class=\"token number\">476864866</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2238001368</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4066508878</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1812370925</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">453092731</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2181625025</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4111451223</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1706088902</span><span class=\"token punctuation\">,</span> <span class=\"token number\">314042704</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2344532202</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">4240017532</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1658658271</span><span class=\"token punctuation\">,</span> <span class=\"token number\">366619977</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2362670323</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4224994405</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1303535960</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">984961486</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2747007092</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3569037538</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1256170817</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1037604311</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2765210733</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3554079995</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1131014506</span><span class=\"token punctuation\">,</span> <span class=\"token number\">879679996</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2909243462</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3663771856</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1141124467</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">855842277</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2852801631</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3708648649</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1342533948</span><span class=\"token punctuation\">,</span> <span class=\"token number\">654459306</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3188396048</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3373015174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1466479909</span><span class=\"token punctuation\">,</span> <span class=\"token number\">544179635</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3110523913</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3462522015</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1591671054</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">702138776</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2966460450</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3352799412</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1504918807</span><span class=\"token punctuation\">,</span> <span class=\"token number\">783551873</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3082640443</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3233442989</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3988292384</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2596254646</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62317068</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1957810842</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3939845945</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2647816111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81470997</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1943803523</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3814918930</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2489596804</span><span class=\"token punctuation\">,</span> <span class=\"token number\">225274430</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2053790376</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3826175755</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2466906013</span><span class=\"token punctuation\">,</span> <span class=\"token number\">167816743</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2097651377</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4027552580</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2265490386</span><span class=\"token punctuation\">,</span> <span class=\"token number\">503444072</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1762050814</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4150417245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2154129355</span><span class=\"token punctuation\">,</span> <span class=\"token number\">426522225</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1852507879</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4275313526</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2312317920</span><span class=\"token punctuation\">,</span> <span class=\"token number\">282753626</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1742555852</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4189708143</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2394877945</span><span class=\"token punctuation\">,</span> <span class=\"token number\">397917763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1622183637</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3604390888</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2714866558</span><span class=\"token punctuation\">,</span> <span class=\"token number\">953729732</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1340076626</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3518719985</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2797360999</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1068828381</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1219638859</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3624741850</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2936675148</span><span class=\"token punctuation\">,</span> <span class=\"token number\">906185462</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1090812512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3747672003</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2825379669</span><span class=\"token punctuation\">,</span> <span class=\"token number\">829329135</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1181335161</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3412177804</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3160834842</span><span class=\"token punctuation\">,</span> <span class=\"token number\">628085408</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1382605366</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3423369109</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3138078467</span><span class=\"token punctuation\">,</span> <span class=\"token number\">570562233</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1426400815</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3317316542</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2998733608</span><span class=\"token punctuation\">,</span> <span class=\"token number\">733239954</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1555261956</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3268935591</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3050360625</span><span class=\"token punctuation\">,</span> <span class=\"token number\">752459403</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1541320221</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2607071920</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3965973030</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1969922972</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40735498</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2617837225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3943577151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1913087877</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">83908371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2512341634</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3803740692</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2075208622</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213261112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2463272603</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3855990285</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2094854071</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198958881</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2262029012</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4057260610</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1759359992</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">534414190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2176718541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4139329115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1873836001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">414664567</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2282248934</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">4279200368</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1711684554</span><span class=\"token punctuation\">,</span> <span class=\"token number\">285281116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2405801727</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4167216745</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1634467795</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">376229701</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2685067896</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3608007406</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1308918612</span><span class=\"token punctuation\">,</span> <span class=\"token number\">956543938</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2808555105</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3495958263</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1231636301</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1047427035</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2932959818</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3654703836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1088359270</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">936918000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2847714899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3736837829</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1202900863</span><span class=\"token punctuation\">,</span> <span class=\"token number\">817233897</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3183342108</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3401237130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1404277552</span><span class=\"token punctuation\">,</span> <span class=\"token number\">615818150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3134207493</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3453421203</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1423857449</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">601450431</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3009837614</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3294710456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1567103746</span><span class=\"token punctuation\">,</span> <span class=\"token number\">711928724</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3020668471</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3272380065</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1510334235</span><span class=\"token punctuation\">,</span> <span class=\"token number\">755167117</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">update_crc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">crc<span class=\"token punctuation\">,</span> buf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> crc<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> v <span class=\"token keyword\">of</span> buf<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> idx <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">^</span> v<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">CRC_TABLE</span><span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">>>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> c<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">buf</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token function\">update_crc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></div><p>The only thing that differs is the unsigned right shift (<code>&gt;&gt;&gt;</code>) we added to get rid of signs in JS numbers.</p>\n<p>We can now include this implementation along with some performance measurements in <code>index.html</code>:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>WASM Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Place your data here<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\nHello,WASM!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span>\n      <span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span>\n        <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">readonly</span>\n        <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Resulting HEX will be displayed here<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">disabled</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-wasm<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Calculate CRC-32 (WASM)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span>\n      <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Calculate CRC-32 ( JS )<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword module\">import</span> <span class=\"token imports\">init<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> crc <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./pkg/wasm_test.js\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword module\">import</span> <span class=\"token imports\">crcjs</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./crc.js\"</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">calculate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> name</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">encode</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> t0 <span class=\"token operator\">=</span> <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        output<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> t1 <span class=\"token operator\">=</span> <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>t1 <span class=\"token operator\">-</span> t0<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> ms</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn-js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span>crcjs<span class=\"token punctuation\">,</span> <span class=\"token string\">\"js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> btnWASM <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn-wasm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        btnWASM<span class=\"token punctuation\">.</span><span class=\"token property-access\">disabled</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        btnWASM<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span>crc<span class=\"token punctuation\">,</span> <span class=\"token string\">\"wasm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></div><p>Reload the page and check it out (open console to see performance information):\n<img src=\"crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark/performance.png\" alt=\"5 paragraphs of &quot;Lorem Ipsum&quot; took wasm: 0.10 ms vs js: 0.30 ms\"></p>\n<p>Not bad, WASM is nearly three times faster on 5 paragraphs of text, but both of them are still very fast. How about a bigger challenge?</p>\n<p>Update <code>index.html</code> one last time:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>WASM Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Place your data here<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\nHello,WASM!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span>\n      <span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span>\n        <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">readonly</span>\n        <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Resulting HEX will be displayed here<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">disabled</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-wasm<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Calculate CRC-32 (WASM)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span>\n      <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Calculate CRC-32 ( JS )<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-test<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">disabled</span><span class=\"token punctuation\">></span></span>Compare Performance<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>result<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword module\">import</span> <span class=\"token imports\">init<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> crc <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./pkg/wasm_test.js\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword module\">import</span> <span class=\"token imports\">crcjs</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./crc.js\"</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">calculate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> name</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">encode</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> t0 <span class=\"token operator\">=</span> <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        output<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> t1 <span class=\"token operator\">=</span> <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>t1 <span class=\"token operator\">-</span> t0<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> ms</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn-js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span>crcjs<span class=\"token punctuation\">,</span> <span class=\"token string\">\"js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> btnWASM <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn-wasm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        btnWASM<span class=\"token punctuation\">.</span><span class=\"token property-access\">disabled</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        btnWASM<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span>crc<span class=\"token punctuation\">,</span> <span class=\"token string\">\"wasm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> btnTest <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn-test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        btnTest<span class=\"token punctuation\">.</span><span class=\"token property-access\">disabled</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        btnTest<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// Max random buffer</span>\n          result<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">crypto</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getRandomValues</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">65536</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test data\"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">const</span> t10 <span class=\"token operator\">=</span> <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> hash1 <span class=\"token operator\">=</span> <span class=\"token function\">crcjs</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> t11 <span class=\"token operator\">=</span> <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          result<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;b>js&lt;/b>: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span>t11 <span class=\"token operator\">-</span> t10<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> ms&lt;br/></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n          <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JS hash\"</span><span class=\"token punctuation\">,</span> hash1<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">const</span> t00 <span class=\"token operator\">=</span> <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> hash2 <span class=\"token operator\">=</span> <span class=\"token function\">crc</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> t01 <span class=\"token operator\">=</span> <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          result<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;b>wasm&lt;/b>: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span>t01 <span class=\"token operator\">-</span> t00<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> ms&lt;br/></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n          <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WASM hash\"</span><span class=\"token punctuation\">,</span> hash2<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></div><p>I&#39;ve added the third button that creates a big random binary array (65.5Kb), marks time, runs JS and WASM CRC-32 implementation over that buffer and shares the findings.</p>\n<p>Here are the results I got in Edge, Safari and Firefox:\n<img src=\"crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark/edge_safari_firefox.png\" alt=\"Edge (js:6.70ms, wasm:0.60ms), Safari: (js: 10.00ms, wasm: 1.00ms) and Firefox (js: 7.00ms, 2.00ms)\"></p>\n<h2 id=\"using-wasm-from-nodejs\">Using WASM from NodeJS</h2>\n<p>Similarly to web target, we can build NodeJS-friendly package by running:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre>wasm-pack build --target nodejs --out-dir pkg-node --release</pre></div><p>The contents of <code>pkg-node</code> are mostly the same as web <code>pkg</code>, except for <code>wasm_test.js</code>, that now reads WASM module from the file system.</p>\n<p>Create <code>index.js</code> with:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">PerformanceObserver</span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">performance</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"perf_hooks\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> crypto <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> crc <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./pkg-node/wasm_test.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> crcJS <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./crc.cjs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> perfObserver <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">items</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  items<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">,</span> entry<span class=\"token punctuation\">.</span><span class=\"token property-access\">duration</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ms\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nperfObserver<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"measure\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">buffer</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token number\">10_000_000</span><span class=\"token punctuation\">;</span>\n\ncrypto<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">randomBytes</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">throw</span> err<span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Generated random </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">/</span> <span class=\"token number\">1_000_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">MB of data</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wasm-start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> crcwasm <span class=\"token operator\">=</span> <span class=\"token function\">crc</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wasm-end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"js-start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> crcjs <span class=\"token operator\">=</span> <span class=\"token function\">crcJS</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"js-end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">assert</span><span class=\"token punctuation\">(</span>crcjs<span class=\"token punctuation\">,</span> crcwasm<span class=\"token punctuation\">,</span> <span class=\"token string\">\"CRC values differ!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">measure</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"js  \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"js-start\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"js-end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">measure</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wasm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wasm-start\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wasm-end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>The imported CommonJS script <code>crc.cjs</code> is identical to <code>crc.js</code> apart from the last line ( export default =&gt; module.exports):</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">CRC_TABLE</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1996959894</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3993919788</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2567524794</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124634137</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1886057615</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3915621685</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2657392035</span><span class=\"token punctuation\">,</span> <span class=\"token number\">249268274</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2044508324</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3772115230</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2547177864</span><span class=\"token punctuation\">,</span> <span class=\"token number\">162941995</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2125561021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3887607047</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2428444049</span><span class=\"token punctuation\">,</span> <span class=\"token number\">498536548</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1789927666</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4089016648</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2227061214</span><span class=\"token punctuation\">,</span> <span class=\"token number\">450548861</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1843258603</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4107580753</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2211677639</span><span class=\"token punctuation\">,</span> <span class=\"token number\">325883990</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1684777152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4251122042</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2321926636</span><span class=\"token punctuation\">,</span> <span class=\"token number\">335633487</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1661365465</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4195302755</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2366115317</span><span class=\"token punctuation\">,</span> <span class=\"token number\">997073096</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1281953886</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3579855332</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2724688242</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1006888145</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1258607687</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3524101629</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2768942443</span><span class=\"token punctuation\">,</span> <span class=\"token number\">901097722</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1119000684</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3686517206</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2898065728</span><span class=\"token punctuation\">,</span> <span class=\"token number\">853044451</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1172266101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3705015759</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2882616665</span><span class=\"token punctuation\">,</span> <span class=\"token number\">651767980</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1373503546</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3369554304</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3218104598</span><span class=\"token punctuation\">,</span> <span class=\"token number\">565507253</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1454621731</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3485111705</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3099436303</span><span class=\"token punctuation\">,</span> <span class=\"token number\">671266974</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1594198024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3322730930</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2970347812</span><span class=\"token punctuation\">,</span> <span class=\"token number\">795835527</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1483230225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3244367275</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3060149565</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1994146192</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31158534</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2563907772</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">4023717930</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1907459465</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112637215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2680153253</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3904427059</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2013776290</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">251722036</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2517215374</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3775830040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2137656763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141376813</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2439277719</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3865271297</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1802195444</span><span class=\"token punctuation\">,</span> <span class=\"token number\">476864866</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2238001368</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4066508878</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1812370925</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">453092731</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2181625025</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4111451223</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1706088902</span><span class=\"token punctuation\">,</span> <span class=\"token number\">314042704</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2344532202</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">4240017532</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1658658271</span><span class=\"token punctuation\">,</span> <span class=\"token number\">366619977</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2362670323</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4224994405</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1303535960</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">984961486</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2747007092</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3569037538</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1256170817</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1037604311</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2765210733</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3554079995</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1131014506</span><span class=\"token punctuation\">,</span> <span class=\"token number\">879679996</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2909243462</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3663771856</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1141124467</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">855842277</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2852801631</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3708648649</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1342533948</span><span class=\"token punctuation\">,</span> <span class=\"token number\">654459306</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3188396048</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3373015174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1466479909</span><span class=\"token punctuation\">,</span> <span class=\"token number\">544179635</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3110523913</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3462522015</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1591671054</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">702138776</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2966460450</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3352799412</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1504918807</span><span class=\"token punctuation\">,</span> <span class=\"token number\">783551873</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3082640443</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3233442989</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3988292384</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2596254646</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62317068</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1957810842</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3939845945</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2647816111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81470997</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1943803523</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3814918930</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2489596804</span><span class=\"token punctuation\">,</span> <span class=\"token number\">225274430</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2053790376</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3826175755</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2466906013</span><span class=\"token punctuation\">,</span> <span class=\"token number\">167816743</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2097651377</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4027552580</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2265490386</span><span class=\"token punctuation\">,</span> <span class=\"token number\">503444072</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1762050814</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4150417245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2154129355</span><span class=\"token punctuation\">,</span> <span class=\"token number\">426522225</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1852507879</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4275313526</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2312317920</span><span class=\"token punctuation\">,</span> <span class=\"token number\">282753626</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1742555852</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4189708143</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2394877945</span><span class=\"token punctuation\">,</span> <span class=\"token number\">397917763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1622183637</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3604390888</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2714866558</span><span class=\"token punctuation\">,</span> <span class=\"token number\">953729732</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1340076626</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3518719985</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2797360999</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1068828381</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1219638859</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3624741850</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2936675148</span><span class=\"token punctuation\">,</span> <span class=\"token number\">906185462</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1090812512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3747672003</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2825379669</span><span class=\"token punctuation\">,</span> <span class=\"token number\">829329135</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1181335161</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3412177804</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3160834842</span><span class=\"token punctuation\">,</span> <span class=\"token number\">628085408</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1382605366</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3423369109</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3138078467</span><span class=\"token punctuation\">,</span> <span class=\"token number\">570562233</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1426400815</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3317316542</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2998733608</span><span class=\"token punctuation\">,</span> <span class=\"token number\">733239954</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1555261956</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3268935591</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3050360625</span><span class=\"token punctuation\">,</span> <span class=\"token number\">752459403</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1541320221</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2607071920</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3965973030</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1969922972</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40735498</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2617837225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3943577151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1913087877</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">83908371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2512341634</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3803740692</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2075208622</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213261112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2463272603</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3855990285</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2094854071</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198958881</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2262029012</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4057260610</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1759359992</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">534414190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2176718541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4139329115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1873836001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">414664567</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2282248934</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">4279200368</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1711684554</span><span class=\"token punctuation\">,</span> <span class=\"token number\">285281116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2405801727</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4167216745</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1634467795</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">376229701</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2685067896</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3608007406</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1308918612</span><span class=\"token punctuation\">,</span> <span class=\"token number\">956543938</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2808555105</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3495958263</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1231636301</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1047427035</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2932959818</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3654703836</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1088359270</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">936918000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2847714899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3736837829</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1202900863</span><span class=\"token punctuation\">,</span> <span class=\"token number\">817233897</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3183342108</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3401237130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1404277552</span><span class=\"token punctuation\">,</span> <span class=\"token number\">615818150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3134207493</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3453421203</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1423857449</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">601450431</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3009837614</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3294710456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1567103746</span><span class=\"token punctuation\">,</span> <span class=\"token number\">711928724</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3020668471</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3272380065</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1510334235</span><span class=\"token punctuation\">,</span> <span class=\"token number\">755167117</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">update_crc</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">crc<span class=\"token punctuation\">,</span> buf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> crc<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> v <span class=\"token keyword\">of</span> buf<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> idx <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">^</span> v<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">CRC_TABLE</span><span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">>>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> c<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">buf</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token function\">update_crc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></div><p>Finally, run the script:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token function\">node</span> index\n<span class=\"token comment\"># Generated random 10MB of data</span>\n<span class=\"token comment\"># js   253.875679 ms</span>\n<span class=\"token comment\"># wasm 39.126159 ms</span></pre></div><p>The bigger the size of the data to hash, the bigger is the gap between JS and WASM speeds:</p>\n<div class=\"highlight highlight-source-bash notranslate\"><pre><span class=\"token comment\"># Generated random 100MB of data</span>\njs   <span class=\"token number\">2461.758713</span> ms\nwasm <span class=\"token number\">389.698142</span> ms\n\n<span class=\"token comment\"># Generated random 1000MB of data</span>\njs   <span class=\"token number\">25945.486315</span> ms\nwasm <span class=\"token number\">3763.860294</span> ms</pre></div>"},"me-and-react-5-years-in-15-minutes":{"title":"Me & React: 5 Years in 15 Minutes","date":"2022-09-08T04:56:49.000Z","tags":["javascript","react","frontend"],"draft":false,"twitter":"1567745886800732160","dev_to":"https://dev.to/valeriavg/me-react-5-years-in-15-minutes-58od","summary":"I first heard of React when a friend showed me a project he had written. It was some sort of content management system: it had tables, forms, visual editors and stuff like this. I don't remember much, except that code was really really confusing\n","url":"me-and-react-5-years-in-15-minutes","content":"<p>I first heard of React when a friend showed me a project he had written. It was some sort of content management system: it had tables, forms, visual editors and stuff like this. I don&#39;t remember much, except that code was really really confusing, it looked like this:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">// hint: you can use this codepen to follow along:</span>\n<span class=\"token comment\">// https://codepen.io/valeriavg-the-flexboxer/pen/WNJNMRp</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// tag</span>\n  <span class=\"token string\">\"button\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// properties</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// children</span>\n  <span class=\"token string\">\"Click Me!\"</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// &lt;div id=\"app\">&lt;/div></span></pre></div><p>So, of course, I was quite frustrated someone would want to write <em>that</em>, when you could just write <em>this</em> instead:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onClick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>Click me!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></div><h2 id=\"jsx-html-in-js\">JSX: HTML in JS</h2>\n<p>Some time passed, and, to my surprise, React was all over the place: every other job advertisement was mentioning it.</p>\n<p>And so I gave it another try. This time around it wasn&#39;t just a library you import - somehow it turned into a whole new language, called <a href=\"https://reactjs.org/docs/introducing-jsx.html\" rel=\"noopener noreferrer\" target=\"_blank\">jsx</a>. Which, however, was vaguely familiar:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, JSX!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Click me!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>That was almost the same as my old pal <em>HTML</em>, except <em>JSX</em> allowed splitting HTML pages into tiny reusable dynamic building blocks:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">One</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> One </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Two</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> Two </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Three</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> Three </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">One</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Two</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Three</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>Behind the scenes, however, it was still the same code:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">One</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"One\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Two</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Two\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Three</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Three\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token function\"><span class=\"token maybe-class-name\">One</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Two</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Three</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>But JSX made a lot of difference and React has finally started making sense to me.</p>\n<h2 id=\"stateful-and-stateless-components\">Stateful and stateless components</h2>\n<p>One of the first things I&#39;ve learned was a &quot;stateful&quot; component:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>Or rather it was the second thing, as, apparently, I&#39;ve already got familiar with it&#39;s &quot;stateless&quot; counterpart.</p>\n<p>A <em>stateful</em> component had a <em>state</em> which was triggering a re-render on change, while the <em>stateless</em> had only the render part and were rendering exactly the same thing as long as <em>props</em> were the same:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">! </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>React<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>Back then I worked for a startup which allowed creators distribute video content for their fans among other things. That meant we had a dashboard for creators, and website and an app for end users. And React worked perfectly well for the dashboard, especially when <em>functional</em> components came along:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> setName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>And so, the project was growing, along with the amount of dependencies. We used <a href=\"https://emotion.sh/docs/styled\" rel=\"noopener noreferrer\" target=\"_blank\">emotion</a> styled components, <a href=\"https://github.com/remix-run/react-router#readme\" rel=\"noopener noreferrer\" target=\"_blank\">react-router</a> and of a little something to manage the state.</p>\n<h2 id=\"state-management\">State management</h2>\n<p>One of the first libraries for <em>state management</em> I&#39;ve tried was <a href=\"https://react-rxjs.org/docs/getting-started\" rel=\"noopener noreferrer\" target=\"_blank\">RxJS</a>. Sure, it added even more <em>magic</em> to the project, but hey, it was cool to share state between two components, right?</p>\n<p>Wrong, it was chaos! I could never tell which one of them changed the state and it made debugging quite mind bending, as sometimes <code>console.log</code> has been printed a microsecond <em>before</em> the state has been actually propagated.</p>\n<p><a href=\"https://react-redux.js.org/introduction/getting-started\" rel=\"noopener noreferrer\" target=\"_blank\">Redux</a> has treated me a bit better in that sense, but having one gigantic <em>store</em> was not convenient for my preferred modular architecture.</p>\n<p>And so I stuck to the React&#39;s own <code>context</code> because I could easily split states and trace the updates easier:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">NameContext</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Name</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useContext</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">NameContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>name<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> setName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NameContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>What<span class=\"token punctuation\">'</span>s your name?<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Name</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">NameContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>Which, as you can tell from the code, was precisely around the time functional components came along.</p>\n<h2 id=\"functional-components\">Functional components</h2>\n<p>In a nutshell, functional components were an attempt to turn stateful components into stateless with ease and vice versa by letting them all be functions and use <em>hooks</em> instead:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> setName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>I can&#39;t argue that code became much easier to write and read, though I had my concerns regarding <a href=\"https://reactjs.org/docs/hooks-intro.html\" rel=\"noopener noreferrer\" target=\"_blank\">hooks</a>. First off, the state still needs to be stored somewhere and originally it was proposed to be built around <code>this</code>, which wouldn&#39;t work with arrow functions and would need to rely on the fact that JSX is compiled (not the case as at the moment it uses a <a href=\"https://github.com/facebook/react/blob/main/packages/react/src/ReactHooks.js#L81\" rel=\"noopener noreferrer\" target=\"_blank\">dispatcher</a> instead). And secondly, it required <em>thinking in React</em>.</p>\n<p>While classes were a mouthful - they were straightforward - there were explicit <code>props</code> and <code>state</code>, and when state or the props would change - the <code>render</code> method would be triggered. And there were a couple of methods you could use to control this flow, like <code>shouldComponentUpdate</code> or <code>componentDidMount</code>:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Component did mount!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">shouldComponentUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">new</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> props<span class=\"token punctuation\">,</span> state <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">old</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>Which when turned into a succinct functional component with hooks looked liked magic:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> setName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mounted!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name changed:\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>I can&#39;t say I know every aspect of how it works now, years after, and back when it was some wild juju I gave up trying to comprehend. Unfortunately, things I don&#39;t understand have a tendency to bite me when I least expect it.</p>\n<h2 id=\"handling-performance-issues\">Handling performance issues</h2>\n<p>As I mentioned, React was a working great for our dashboard, and so I&#39;ve decided to switch our plain old MVC website to a fancy server-side rendered React. That was before <a href=\"https://nextjs.org/\" rel=\"noopener noreferrer\" target=\"_blank\">NextJS</a> became the de-facto standard for this and I&#39;ve kinda just glued most pieces together myself: after all, it boiled down to replacing the template engine we were using (I <em>think</em> it was <a href=\"https://pugjs.org/language/attributes.html\" rel=\"noopener noreferrer\" target=\"_blank\">pug</a>) with <a href=\"https://reactjs.org/docs/react-dom-server.html\" rel=\"noopener noreferrer\" target=\"_blank\">ReactDOMServer</a>:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token comment\">//</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">React</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"react\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">ReactDOMServer</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"react-dom/server\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"script\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'console.log(\"ReactDOM hydrate would happen here\")'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello, SSR!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">,</span> script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token maybe-class-name\">ReactDOMServer</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">renderToString</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>The new version was quite ok and I could add some real reactivity to the otherwise static pages, including the changes to a video player.</p>\n<p>I learned that some things required dropping down plain old JS event listeners with the use of <em>refs</em>:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> videoEl <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">,</span> setTime<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onTimeUpdate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">currentTime</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>videoEl<span class=\"token punctuation\">.</span><span class=\"token property-access\">current</span><span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span><span class=\"token punctuation\">;</span>\n    videoEl<span class=\"token punctuation\">.</span><span class=\"token property-access\">current</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"timeupdate\"</span><span class=\"token punctuation\">,</span> onTimeUpdate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>videoEl<span class=\"token punctuation\">.</span><span class=\"token property-access\">current</span><span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span><span class=\"token punctuation\">;</span>\n      videoEl<span class=\"token punctuation\">.</span><span class=\"token property-access\">current</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"timeupdate\"</span><span class=\"token punctuation\">,</span> onTimeUpdate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>videoEl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>time<span class=\"token punctuation\">}</span><span class=\"token plain-text\">s</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span>\n        <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>videoEl<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">controls</span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>But, as I discovered after, rendering anything on the screen is an expensive task, let alone a high abstraction like HTML/CSS. Now imagine fetching a video stream, processing it, playing and rendering UI changes every frame with the help of a virtual DOM diffing:</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/safmfshly1u56m2b0y72.jpg\" alt=\"Laptop on fire\"></p>\n<p>Yup, that&#39;s what was happening. Now of course, React was not the main issue - the video processing and playing were the heavy ones, but there were so little resources available and so many optimisation required to make it work properly with React, that I gave up and wrote the player interface is plain JavaScript and just &quot;mounted&quot; it on the React component:</p>\n<div class=\"highlight highlight-source-jsx notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> videoEl <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>videoEl<span class=\"token punctuation\">.</span><span class=\"token property-access\">current</span><span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">mountVideo</span><span class=\"token punctuation\">(</span>videoEl<span class=\"token punctuation\">.</span><span class=\"token property-access\">current</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">unmountVideo</span><span class=\"token punctuation\">(</span>videoEl<span class=\"token punctuation\">.</span><span class=\"token property-access\">current</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>videoEl<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mountVideo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div class='time'>0s&lt;/div>&lt;video src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\" controls/></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n  el<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">ontimeupdate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    el<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">innerText</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">currentTime</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">s</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">unmountVideo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>After this I&#39;ve build several quick prototypes with the help of <a href=\"https://graphql.org/\" rel=\"noopener noreferrer\" target=\"_blank\">GraphQL</a> and React Native and worked on yet another dashboard in React / Redux.</p>\n<p>I think by then I finally learned to <em>think in React</em>, but nonetheless from time to time I still turn <code>useEffect</code> into an endless cycle of updates and forget to memoize stuff.</p>\n<p>But I didn&#39;t want any of it: I didn&#39;t want to learn a language within language with a dozen of libraries, I didn&#39;t want to change the way I think - I just wanted to make a performant web application as easy as possible. And I couldn&#39;t help but resent React for it.</p>\n<p>Yet today I came across a really interesting project, called <a href=\"https://atomicojs.dev/\" rel=\"noopener noreferrer\" target=\"_blank\">atomico</a> - a WebComponents library, inspired by React hooks; And it dawned upon me that without React, and, particularly JSX - none of it would be possible, not my beloved <a href=\"https://svelte.dev/\" rel=\"noopener noreferrer\" target=\"_blank\">svelte</a>, not <a href=\"https://flutter.dev/\" rel=\"noopener noreferrer\" target=\"_blank\">flutter</a>, nor dozens of other frameworks.</p>\n<p>And just as I&#39;d advise any web developer to learn basics of so-called &quot;vanilla&quot; JavaScript, I highly recommend to look into a library that shaped the modern web technologies, at least out of curiosity.</p>\n<p>Hopefully, it&#39;d take you much less time to master than it took me :-)</p>\n"},"es-modules-import-maps-back-to-the-future":{"title":"ES Modules & Import Maps: Back to the Future","date":"2022-09-24T09:13:15.000Z","tags":["javascript","webdev","beginners","esm"],"draft":false,"twitter":"1573572870592135169","dev_to":"https://dev.to/valeriavg/es-modules-import-maps-back-to-the-future-56o","summary":"There was a time when creating a web page meant creating an html file, yet nowadays it seems impossible to build any frontend without the bottomless pit of node_modules, yielding a finely chewed yet hefty bundle.xyz.js. Well, I got to learn that it might not be the case soon and, naturally, I feel the urge to share it with the rest of you.\n","url":"es-modules-import-maps-back-to-the-future","content":"<p>There was a time when creating a web page meant creating an html file, yet nowadays it seems impossible to build any frontend without the bottomless pit of node<em>modules, yielding a finely chewed yet hefty _bundle.xyz.js</em>. Well, I got to learn that it might not be the case soon and, naturally, I feel the urge to share it with the rest of you.</p>\n<h2 id=\"start-with-html\">Start with HTML</h2>\n<p>The barebones page in HTML5 looks like this:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></div><blockquote>\n<p><em>Hint</em>: I got this template by typing <code>html:5</code> in my VSCode thanks to <a href=\"https://code.visualstudio.com/docs/editor/emmet\" rel=\"noopener noreferrer\" target=\"_blank\">Emmet abbreviations</a></p>\n</blockquote>\n<h2 id=\"add-a-module\">Add a module</h2>\n<p>Now, let&#39;s say we would like to add a framework to it, <a href=\"https://preactjs.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Preact</a>, for example.\nWe could do it like this:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> h<span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Component</span><span class=\"token punctuation\">,</span> render <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"https://esm.sh/preact@10.11.0\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword module\">import</span> <span class=\"token imports\">htm</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"https://esm.sh/htm@3.1.1\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Initialize htm with Preact</span>\n    <span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> htm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bind</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">App</span></span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;h1>Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>props<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!&lt;/h1></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token maybe-class-name\">App</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> name=\"World\" /></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></div><p>You can open the page in your browser as a simple file and see that it actually works. And that is the power of modern ECMAScript modules, that are defined by simply adding <code>type=&quot;module&quot;</code> to a script tag.</p>\n<p>For such a simple page it works great, but it can quickly become hard to work with once we add more pages.</p>\n<p>Let&#39;s create another:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Counter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> h<span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Component</span><span class=\"token punctuation\">,</span> render <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"https://esm.sh/preact@10.11.0\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"https://esm.sh/preact@10.11.0/hooks\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword module\">import</span> <span class=\"token imports\">htm</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"https://esm.sh/htm@3.1.1\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> htm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bind</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Counter</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword control-flow\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;button onClick=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">>\n          Count: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n        &lt;/button></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token maybe-class-name\">Counter</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> /></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></div><p>It&#39;s a good practice to specify the exact version of dependencies to avoid breaking changes, but updating those will be a mess, right?</p>\n<p>Gladly, no! Because we could write an <a href=\"https://wicg.github.io/import-maps/\" rel=\"noopener noreferrer\" target=\"_blank\">import-map</a>!</p>\n<h2 id=\"import-maps\">Import Maps</h2>\n<p>An import map is a JSON that tells browser where to find a certain import by its alias. For example, we could create an import map with the following contents:</p>\n<div class=\"highlight highlight-source-json notranslate\"><pre><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"imports\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"preact\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/preact@10.11.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"preact/\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/preact@10.11.0/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"htm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/htm@3.1.1\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre></div><p>And include it on both pages like this:</p>\n<div class=\"highlight highlight-source-html notranslate\"><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>importmap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"imports\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"preact\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/preact@10.11.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"preact/\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/preact@10.11.0/\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"htm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/htm@3.1.1\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> h<span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Component</span><span class=\"token punctuation\">,</span> render <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"preact\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"preact/hooks\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword module\">import</span> <span class=\"token imports\">htm</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"htm\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Initialize htm with Preact</span>\n    <span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> htm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bind</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">App</span></span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;h1>Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>props<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!&lt;/h1></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token maybe-class-name\">App</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> name=\"World\" /></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></div><p>Quite neat, right? You could also use it to reference your own components and avoid long paths. Ah, future is bright!</p>\n<p>... But we&#39;re not quite there yet.</p>\n<p>Unfortunately, import maps are still unofficial draft and therefore some vital features, like including an external import map from a json file, is not supported or they are not <a href=\"https://caniuse.com/?search=importmap\" rel=\"noopener noreferrer\" target=\"_blank\">supported at all</a> in some browsers (e.g. Safari).</p>\n<h2 id=\"but-i-want-to-use-it-right-now\">But I want to use it RIGHT NOW!</h2>\n<p>I hear you, so am I!</p>\n<p>And I do have some good news for us: there is a mature JavaScript runtime, called <a href=\"https://deno.land/\" rel=\"noopener noreferrer\" target=\"_blank\">deno</a> that supports ESM and import maps out of the box. And <a href=\"https://fresh.deno.dev/\" rel=\"noopener noreferrer\" target=\"_blank\">fresh</a> framework, for example, is a delight to work with.</p>\n<p>I&#39;ve recently migrated my <a href=\"https://github.com/ValeriaVG/valeriavg.dev\" rel=\"noopener noreferrer\" target=\"_blank\">blog</a> to Fresh from Hugo and I can&#39;t wait to finally implement some of the dynamic features I have been postponing for too long.</p>\n"},"10-reasons-not-to-use-go-for-your-next-project":{"title":"10 Reasons NOT to Use Go for Your Next Project","date":"2021-12-06T15:58:52.000Z","tags":["webdev","go","node","irony"],"draft":false,"dev_to":"https://dev.to/valeriavg/10-reasons-not-to-use-go-for-your-next-project-313i","summary":"They say Go is the language of the web. Of course, with Google backing it up it sounds very objective! But is it as good as they say? I can  think of cases where it wouldn't be a good fit\n","url":"10-reasons-not-to-use-go-for-your-next-project","content":"<p>They say Go is the language of the web. Of course, with Google backing it up it sounds very objective! But is it as good as they say? I can think of cases where it wouldn&#39;t be a good fit</p>\n<h2 id=\"1-you-need-your-app-to-compile-for-at-least-an-hour-so-you-can-get-a-break\">1. You need your app to compile for at least an hour so you can get a break</h2>\n<p>Totally relatable. With Go compile speed you won&#39;t be able to even stand up from your chair, let alone grab a coffee! No, really, do they even compile it all?! I had TypeScript taking longer to check a small project than <code>go run</code>!</p>\n<h2 id=\"2-you-love-code-puzzles\">2. You love code puzzles</h2>\n<p>With Go, it&#39;s really hard to write frustrating code. No classes, no multiple inheritances, no overriding. Heck, there is only one way to do loops! It&#39;s almost impossible to create a great puzzling labyrinth of dependencies so that your team could enjoy a nice challenge every once in a while. Who would settle for a tool like that?!</p>\n<h2 id=\"3-you-hate-default-values\">3. You hate default values</h2>\n<p>In Go, every variable always has a value. An integer would be created with a <code>0</code>, a string would be an empty string and so on. Why would you leave JavaScript with its variety of <code>null</code>, <code>undefined</code> and empty values for such a limited language?!</p>\n<h2 id=\"4-you-dont-like-to-handle-errors\">4. You don&#39;t like to handle errors</h2>\n<p>While Go programs can panic, the Go way of handling errors is to return them as a last return value and handle them explicitly or explicitly ignore them. Every! Time! Ugh! Where&#39;s the fun in it? So much boilerplate and so little debugging! Don&#39;t you feel the joy every time an exception is thrown somewhere inside of a dozen <code>try{}catch{}</code> wrappers?</p>\n<h2 id=\"5-you-are-a-true-patriot-of-your-favourite-language\">5. You are a true patriot of your favourite language</h2>\n<p>Those devs these days have no loyalty, am I right? They hop from one mainstream train to another! I think they are just lazy! Back in the day, we were writing code in Notepad without any checks and we&#39;ve done just fine. Nowadays some program does half of the programmer&#39;s job, no one even needs to remember the proper syntax or care about formatting. And Go is the worst: it won&#39;t even compile with an unused variable!</p>\n<h2 id=\"6-you-like-to-watch-spinners\">6. You like to watch spinners</h2>\n<p>Go is fast and so are the requests to API, written in Go. So fast that you&#39;ll barely see a spinner in the client application! Are we supposed to set a timeout now or what? How would the users enjoy our unique spinner designs if they can&#39;t see them?!</p>\n<h2 id=\"7-your-server-is-running-on-windows98\">7. Your server is running on Windows&#39;98</h2>\n<p>I don&#39;t know how you guys put up with it. Go won&#39;t even launch on my dedicated Windows&#39;98 server! It was with me my whole career and now I&#39;m supposed to abandon it?! For what? Your cloud servers have no personality! You won&#39;t even notice if it&#39;d be replaced by another machine. And Go is all about the cloud!</p>\n<h2 id=\"8-your-hosting-provider-only-supports-php--mysql\">8. Your hosting provider only supports PHP &amp; MySQL</h2>\n<p>Who do you call a dinosaur?! This technology has withstood the test of time and no new fancy tech can say that. Go was released just the other day, in 2009, while PHP dates back to 1995!</p>\n<h2 id=\"9-your-application-requires-full-control-over-memory\">9. Your application requires full control over memory</h2>\n<p>Jokes aside, everything comes at a price and Go is great for a lot of things, but Go was intentionally created &quot;less memory safe&quot;. And as long as you run your application in a dedicated cloud container it will not become an issue, but if you&#39;re dealing with strict security requirements for a consumer application, you are probably better off with Rust or another system language.</p>\n<h2 id=\"10-you-are-writing-embedded-software-or-an-os\">10. You are writing embedded software or an OS</h2>\n<p>Go will only compile to a supported platform. You can&#39;t write a custom operational system in Go or run it on bare metal. Once again, Rust could back you up here since Go is simply not made for it.</p>\n<p>I&#39;ve run out of reasons not to write in Go. I love Rust, but Go is almost as fast yet much, much simpler to learn and write in. I love Node.js + TypeScript, but I love performance and runtime type-checks more.</p>\n<p>For the next CLI or API, I&#39;m going with Go. What about you?</p>\n"},"five-pro-tips-to-master-promises-in-js":{"title":"Five Pro Tips to Master Promises in Js","date":"2021-06-05T09:25:36.000Z","tags":["javascript","node","tutorial","beginners"],"draft":false,"dev_to":"https://dev.to/valeriavg/five-pro-tips-to-master-promises-in-js-c2h","summary":"Events handling and promises in particular are hands down the best JavaScript feature. You're probably familiar with the concept itself, but in short, a Promise in JavaScript is a promise to call back with the result.\n","url":"five-pro-tips-to-master-promises-in-js","content":"<p>Events handling and promises in particular are hands down the best JavaScript feature. You&#39;re probably familiar with the concept itself, but in short, a <code>Promise</code> in JavaScript is <em>a promise to call back with the result</em>.</p>\n<p>Therefore, a promise can be constructed with two functions: one to be called on success and the other - in case of error. Here is a promise that would randomly fail or reject after one second:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> randomBool <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>randomBool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Return any value, or no value at all</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>randomBool<span class=\"token punctuation\">)</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I am resolved!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Reject with an error, some value or nothing at all</span>\n    <span class=\"token keyword control-flow\">else</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"On no!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>Try this in your browser console or in node repl (run <code>node</code> with no arguments). You should see <code>true</code> or <code>false</code> logged to a console after a second and, if promise failed, you&#39;ll see an error message (or a warning that promise was not caught in node). Now that we got something to play with, the tips I&#39;ve promised (pun intended):</p>\n<h2 id=\"tip-1-promise-starts-right-away\">Tip #1: Promise starts right away</h2>\n<p>As you&#39;ve seen in the example, a promise will resolve or reject even if it have not been chained with <code>.then</code>, <code>.catch</code> or <code>await</code>. As soon as you&#39;ve created the promise, it&#39;ll start doing whatever it had been told to do.</p>\n<h2 id=\"tip-2-once-complete-promise-will-yield-the-same-result-over-and-over\">Tip #2: Once complete, promise will yield the same result over and over</h2>\n<p>Try running <code>promise.then(console.log)</code> in the same console or repl where you defined the promise from previous example. It&#39;ll log the exact same result over and over, without a delay. Try logging <code>console.log(promise)</code>, what do you see? I bet it&#39;s either:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token known-class-name class-name\">Promise</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>rejected<span class=\"token operator\">></span><span class=\"token operator\">:</span> <span class=\"token string\">\"On no!\"</span><span class=\"token punctuation\">}</span></pre></div><p>Or , if it has resolved,:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token known-class-name class-name\">Promise</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"I am resolved!\"</span> <span class=\"token punctuation\">}</span></pre></div><p>You&#39;ve probably guessed by now, that a promise can be in one of the three states: <code>pending</code>,<code>rejected</code> or <code>fulfilled</code> (resolved to a value). The trick here is that it&#39;ll stay in its final state till the garbage collector wipes it from existence 🪦.</p>\n<h2 id=\"tip-3-promiseprototypethen-accepts-two-callbacks\">Tip #3: Promise.prototype.then accepts two callbacks</h2>\n<p>You can get promise results by chaining <code>then</code> and <code>catch</code> to it:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre>promise<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">log</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>Or, simply:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre>promise<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">log</span><span class=\"token punctuation\">,</span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><h2 id=\"tip-4-promiseprototypethen-and-promiseprototypecatch-return-a-new-promise\">Tip #4: Promise.prototype.then and Promise.prototype.catch return a new promise</h2>\n<p>If you <code>console.log(promise.then(()=&gt;{},()=&gt;{}))</code>, you&#39;ll get <code>Promise { &lt;pending&gt; }</code>, even if the promise have been resolved. This, however, does not mean that the async operation itself will be retried, just that these methods <em>always</em> create a new promise, even if your callback functions are synchronous.</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre>promise <span class=\"token operator\">===</span>\n  promise<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// false</span>\npromise <span class=\"token operator\">===</span>\n  promise<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> promise<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> promise\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// false</span></pre></div><h2 id=\"tip-5-use-promiseall-promiserace-and-asyncawait-when-appropriate\">Tip #5: Use Promise.all, Promise.race and async/await when appropriate</h2>\n<p>Before ES5 introduced <code>async-await</code> syntax we all lived in a <em>callback hell</em>:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre>promise<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  promise<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    promise<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      promise<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Callback hell in action\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></div><p>But it&#39;s important to remember that <em>async/await</em> is just a syntax sugar over that construction. In it&#39;s core, it still is the same chain, meaning that the next promise won&#39;t be <em>created</em> until the previous one is fulfilled:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createTimeoutPromise</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> timeout</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Promise #</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>n<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is fulfilled</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> now <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">createTimeoutPromise</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">createTimeoutPromise</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">createTimeoutPromise</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Operation took</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> now<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Promise #1 is fulfilled</span>\n<span class=\"token comment\">// Promise #2 is fulfilled</span>\n<span class=\"token comment\">// Promise #3 is fulfilled</span>\n<span class=\"token comment\">// Operation took 3.0 s</span></pre></div><p>Therefore, if you just want it <em>all done</em>, no matter in what order, use <code>Promise.all</code> to speed things up:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> now <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token function\">createTimeoutPromise</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createTimeoutPromise</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createTimeoutPromise</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">998</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Operation took</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> now<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Promise #3 is fulfilled</span>\n<span class=\"token comment\">// Promise #2 is fulfilled</span>\n<span class=\"token comment\">// Promise #1 is fulfilled</span>\n<span class=\"token comment\">// [ 1, 2, 3 ]</span>\n<span class=\"token comment\">// Operation took 1.0 s</span></pre></div><p>As you can see, you&#39;ll still get the results of the promises in the same order as you specified them, despite of the order in which they were fulfilled.</p>\n<p>In rare cases, you may not need <em>all</em> of your promises to fulfil, but <em>any</em> of them. Let them <code>Promise.race</code> for the sire&#39;s favour 👑:</p>\n<div class=\"highlight highlight-source-js notranslate\"><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> now <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">race</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token function\">createTimeoutPromise</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createTimeoutPromise</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createTimeoutPromise</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">998</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Operation took</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> now<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1_000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Promise #3 is fulfilled</span>\n<span class=\"token comment\">// 3</span>\n<span class=\"token comment\">// Operation took 1.0 s</span>\n<span class=\"token comment\">// Promise #2 is fulfilled</span>\n<span class=\"token comment\">// Promise #1 is fulfilled</span></pre></div><p>Keep in mind, that if any of the promises fail, both <code>Promise.all</code> and <code>Promise.race</code> will reject.</p>\n<p>That&#39;s all I had for today, but I <em>promise</em> there&#39;ll be more (see what I did here?).</p>\n"},"coders-block":{"title":"Coder's block","date":"2023-04-16T06:11:36.000Z","tags":["devjournal","productivity","beginners","motivation"],"draft":false,"twitter":"1647857429822992384","dev_to":"https://dev.to/valeriavg/coders-block-4p33","summary":"I often find myself in a state where I simply can’t code. You can call it procrastination, I prefer the term \"coder’s block\" as it makes me feel less guilty about it. But the truth is it happens every once in a while and I don’t like it.\n","url":"coders-block","content":"<p>I often find myself in a state where I simply can’t code. You can call it procrastination, I prefer the term <em>coder’s block</em> as it makes me feel less guilty about it. But the truth is it happens every once in a while and I don’t like it.</p>\n<p>Throughout my career I’ve always strived towards perfection: I’ve received incredible praise for my work, job offers were lining up and when things weren’t going perfect I was falling into a deep hole of self-loathing.</p>\n<p>And now here I am again, desperately trying to push my productivity up and finish the work I can no longer postpone. The saboteurs at the backseat of my mind keep telling me that I’m a fluke and a failure: for not being able to concentrate and just get the job done, for starting something just to drop it in the middle of it and lots of other nasty things.</p>\n<p>And they are right about one thing: there’s a pattern here and I am good at recognising patterns and working around them.</p>\n<h2 id=\"block-vs-flow\">Block vs Flow</h2>\n<p>Why am I sometimes <em>in the flow</em> and other times I can’t write a single line of the most primitive CSS? </p>\n<p>One would suggest I lack motivation, but I’m well aware of the benefits I will receive once I’m finished: be it praise or monetary reward.</p>\n<p>Can it be the opposite? Am I not afraid enough to fail? No, I am terrified of being seen as a failure, of letting people down, of making there lives harder and disappointing them.</p>\n<p>Truth is: I just don’t want to do this particular task at this particular moment because I want to do something else. I am motivated, but towards completely different objective that feels more important, rewarding or simply more fun.</p>\n<p>When my motivation and task align - I’m in the flow and everything is easy and fast. Otherwise there’s an internal conflict of interests and I end up playing tug-of-war with myself until one side gives up.</p>\n<h2 id=\"resolving-internal-conflicts\">Resolving internal conflicts</h2>\n<p>There’s a great approach that I’ve learned recently called <a href=\"https://en.m.wikipedia.org/wiki/Nonviolent_Communication\" rel=\"noopener noreferrer\" target=\"_blank\">non-violent communication</a>. At the core of it is the concept that humans are wired to be compassionate and the violence stems from unmet needs as a defence mechanism.</p>\n<p>Looking for the underlying needs helped me tremendously in interpersonal communication and I thought I’ll give it a try to resolve an internal conflict too.</p>\n<p>The process goes like this: identify and separate facts from the feelings, then discover underlying needs and finally come up with potential actions to satisfy those needs.</p>\n<p>In my case I have an incomplete task at hand and I can’t seem work on it for more than 5 consecutive minutes. I feel boredom and shame. I need a sense of challenge because professional growth is important to me, and I am ashamed because I value reliability: it’s important that I feel confident that I can fulfil promises I make.</p>\n<p>So what actions can I take to ensure that my needs of professional growth and relatability are met?</p>\n<p>The last one is “easy”: I have to finish the task and find ways to avoid similar situations in the future (hence the research article).</p>\n<p>But how can I get professional growth from a boring task?</p>\n<h2 id=\"the-place-one-is-least-willing-to-look\">The place one is least willing to look</h2>\n<p>Growth stems from creativity: from trying something new and unexpected. Coincidentally (not really) new and unexpected kills boredom. Unfortunately, it also requires change and a change is uncomfortable and even stressful as leaving the safe space of our settled beliefs is not much different from leaving our home and going on an adventure.</p>\n<p>When I started this task, I had a plan B: this exact form has been implemented already, but the code was messy and used some quite outdated libraries. Merging the old with the new is something I have never done before: I’m an adept of napalm refactoring (as in rewriting from grounds up rather then dealing with imperfect code). And there I have it: an opportunity to grow, to be less judgemental of code that just works and to incorporate outdated code into a fresh and modern tech stack and see if I can make it not only work, but make it beautiful.</p>\n<p>Once I’ve come to this realisation I got an incredible surge of desire to work on the task I loathed a moment before. I’ve dropped this article at that exact point and dived into it.</p>\n<p>I’m happy to report that one hour later I had a working prototype of the page in question, allowing creation of JSX components from Pug templates and I couldn’t be more proud of this solution. Can’t wait to show it to my teammates! It might make their lives easier as well!</p>\n<p>Thank you for reading! Would you mind sharing what are the coders blocks that you’ve overcome and how?</p>\n"}};
export const staticContent:Record<string, string> = {"mod.ts":"content/mod.ts","how-to-use-custom-files-as-modules-in-nodejs/is_bg_teal.png":"content/how-to-use-custom-files-as-modules-in-nodejs/is_bg_teal.png","crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark/edge_safari_firefox.png":"content/crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark/edge_safari_firefox.png","crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark/hello_wasm.png":"content/crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark/hello_wasm.png","crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark/performance.png":"content/crc-32-checksum-in-wasm-and-raw-js-tutorial-and-benchmark/performance.png"};

export const articlesByPubDate = Object.values(content).sort(
    (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()
);

export const articlesByTag = Object.values(content).reduce((a, c) => {
    for (const tag of c.tags) {
        if (!(tag in a)) {
            a[tag] = [];
        }
        a[tag].push(c);
        a[tag].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
    }
    return a;
}, {} as Record<string, Article[]>);
